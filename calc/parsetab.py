
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSTHANEQGREATTHANEQnonassocLESSTHANGREATTHANleftPLUSMINUSleftMULTIPLYDIVIDEleftIFleftELSEDIVIDE DO ELSE EQUALS FLOAT GREATTHAN GREATTHANEQ IF INPUT INT ISEQUAL LEFT_KEY LEFT_PAR LESSTHAN LESSTHANEQ MINUS MULTIPLY NAME NOTEQUAL PLUS PRINT RIGHT_KEY RIGHT_PAR TERM THEN WHILE\n\tcalc : if_else \n\t\t | if \n\t\t | while_do \n\t\t | read TERM\n\t\t | print TERM\n\t\t | var_assign TERM\n\t\t | expression\n\t\t | calc_2\n\t     | empty\n\t\n\tif_else : IF LEFT_PAR expression RIGHT_PAR then_statement else_statement\n\t\n\tif : IF LEFT_PAR expression RIGHT_PAR then_statement\n\t\n\tthen_statement : THEN calc_2 \n\t\n\telse_statement : ELSE calc_2\n\t\n\twhile_do : WHILE LEFT_PAR expression RIGHT_PAR do_statement\n\t\n\tdo_statement : DO calc_2\n\t\n\tcalc_2 : if_else \n\t\t | if \n\t\t | while_do \n\t\t | read TERM\n\t\t | print TERM\n\t\t | var_assign TERM\n\t\t | expression\n\t\n\tcalc_2 : LEFT_KEY calc_2 RIGHT_KEY \n\t\n\tcalc_2 : calc_2 calc_2\n\t\n\tvar_assign : NAME EQUALS expression\n\t\n\tread : NAME EQUALS INPUT\n\t\n\tprint : PRINT LEFT_PAR expression RIGHT_PAR\n\t\n\texpression : expression MULTIPLY expression\n\t\t\t   | expression DIVIDE expression\n\t\t\t   | expression PLUS expression\n\t\t\t   | expression MINUS expression\n\t\t\t   | expression LESSTHAN expression\n\t\t\t   | expression LESSTHANEQ expression\n\t\t\t   | expression GREATTHAN expression\n\t\t\t   | expression GREATTHANEQ expression\n\t\t\t   | expression NOTEQUAL expression\n\t\t\t   | expression ISEQUAL expression\n\t\n\texpression : LEFT_PAR expression RIGHT_PAR\n\t\n\texpression : MINUS expression\n\t\n\texpression : INT\n\t\t\t   | FLOAT\n\t\n\texpression : NAME\n\t\n\tempty :\n\t'
    
_lr_action_items = {'ISEQUAL':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[20,-41,-42,-40,20,-42,20,-39,20,-34,-32,-31,-30,-33,-28,20,-35,-29,20,20,20,-38,20,]),'INT':([0,2,3,5,7,9,10,11,13,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,73,74,75,76,77,78,79,80,],[18,-22,18,-41,-17,-16,-18,-42,18,18,-40,18,18,18,18,18,18,18,18,18,18,18,-22,18,-17,-16,-18,18,-19,18,18,-20,18,-21,-42,18,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,18,-11,18,-14,18,18,-10,18,-13,]),'IF':([0,2,3,5,7,9,10,11,13,18,30,31,33,34,35,39,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,73,74,75,76,77,78,79,80,],[4,-22,4,-41,-17,-16,-18,-42,4,-40,-22,4,-17,-16,-18,-19,-20,4,-21,-42,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,4,-11,4,-14,4,4,-10,4,-13,]),'INPUT':([41,],[65,]),'TERM':([5,6,12,15,18,32,36,37,45,48,49,50,51,52,53,54,55,56,57,58,64,65,67,71,],[-41,39,42,44,-40,59,60,61,-42,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-25,-26,-38,-27,]),'ELSE':([5,11,18,30,31,33,34,35,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,73,75,76,78,79,80,],[-41,-42,-40,-22,-24,-17,-16,-18,-42,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,77,-14,-12,-10,-15,-13,]),'WHILE':([0,2,3,5,7,9,10,11,13,18,30,31,33,34,35,39,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,73,74,75,76,77,78,79,80,],[8,-22,8,-41,-17,-16,-18,-42,8,-40,-22,8,-17,-16,-18,-19,-20,8,-21,-42,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,8,-11,8,-14,8,8,-10,8,-13,]),'LESSTHANEQ':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[25,-41,-42,-40,25,-42,25,-39,25,-34,-32,-31,-30,None,-28,25,None,-29,25,25,25,-38,25,]),'PLUS':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[24,-41,-42,-40,24,-42,24,-39,24,24,24,-31,-30,24,-28,24,24,-29,24,24,24,-38,24,]),'EQUALS':([11,],[41,]),'NAME':([0,2,3,5,7,9,10,11,13,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,73,74,75,76,77,78,79,80,],[11,-22,11,-41,-17,-16,-18,-42,11,45,-40,45,45,45,45,45,45,45,45,45,45,45,-22,11,-17,-16,-18,45,-19,45,45,-20,11,-21,-42,45,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,11,-11,11,-14,11,11,-10,11,-13,]),'RIGHT_KEY':([5,11,18,30,31,33,34,35,43,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,73,75,76,78,79,80,],[-41,-42,-40,-22,-24,-17,-16,-18,66,-42,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,-11,-14,-12,-10,-15,-13,]),'DO':([70,],[74,]),'THEN':([69,],[72,]),'GREATTHANEQ':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[28,-41,-42,-40,28,-42,28,-39,28,-34,-32,-31,-30,None,-28,28,None,-29,28,28,28,-38,28,]),'LEFT_KEY':([0,2,3,5,7,9,10,11,13,18,30,31,33,34,35,39,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,73,74,75,76,77,78,79,80,],[13,-22,13,-41,-17,-16,-18,-42,13,-40,-22,13,-17,-16,-18,-19,-20,13,-21,-42,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,13,-11,13,-14,13,13,-10,13,-13,]),'NOTEQUAL':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[27,-41,-42,-40,27,-42,27,-39,27,-34,-32,-31,-30,-33,-28,27,-35,-29,27,27,27,-38,27,]),'DIVIDE':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[29,-41,-42,-40,29,-42,29,29,29,29,29,29,29,29,-28,29,29,-29,29,29,29,-38,29,]),'LESSTHAN':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[22,-41,-42,-40,22,-42,22,-39,22,None,None,-31,-30,22,-28,22,22,-29,22,22,22,-38,22,]),'$end':([0,1,2,3,5,7,9,10,11,14,18,30,31,33,34,35,39,42,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,73,75,76,78,79,80,],[-43,-9,-7,-8,-41,-2,-1,-3,-42,0,-40,-22,-24,-17,-16,-18,-4,-5,-6,-42,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,-11,-14,-12,-10,-15,-13,]),'MULTIPLY':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[26,-41,-42,-40,26,-42,26,26,26,26,26,26,26,26,-28,26,26,-29,26,26,26,-38,26,]),'LEFT_PAR':([0,2,3,4,5,7,8,9,10,11,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,73,74,75,76,77,78,79,80,],[16,-22,16,38,-41,-17,40,-16,-18,-42,16,16,47,-40,16,16,16,16,16,16,16,16,16,16,16,-22,16,-17,-16,-18,16,-19,16,16,-20,16,-21,-42,16,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,16,-11,16,-14,16,16,-10,16,-13,]),'FLOAT':([0,2,3,5,7,9,10,11,13,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,38,39,40,41,42,43,44,45,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,73,74,75,76,77,78,79,80,],[5,-22,5,-41,-17,-16,-18,-42,5,5,-40,5,5,5,5,5,5,5,5,5,5,5,-22,5,-17,-16,-18,5,-19,5,5,-20,5,-21,-42,5,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,5,-11,5,-14,5,5,-10,5,-13,]),'GREATTHAN':([2,5,11,18,30,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,64,67,68,],[21,-41,-42,-40,21,-42,21,-39,21,None,None,-31,-30,21,-28,21,21,-29,21,21,21,-38,21,]),'PRINT':([0,2,3,5,7,9,10,11,13,18,30,31,33,34,35,39,42,43,44,45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,66,67,72,73,74,75,76,77,78,79,80,],[17,-22,17,-41,-17,-16,-18,-42,17,-40,-22,17,-17,-16,-18,-19,-20,17,-21,-42,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,-19,-20,-21,-23,-38,17,-11,17,-14,17,17,-10,17,-13,]),'RIGHT_PAR':([5,18,45,46,48,49,50,51,52,53,54,55,56,57,58,62,63,67,68,],[-41,-40,-42,67,-39,-37,-34,-32,-31,-30,-33,-28,-36,-35,-29,69,70,-38,71,]),'MINUS':([0,2,3,5,7,9,10,11,13,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,66,67,68,72,73,74,75,76,77,78,79,80,],[19,23,19,-41,-17,-16,-18,-42,19,19,-40,19,19,19,19,19,19,19,19,19,19,19,23,19,-17,-16,-18,19,-19,19,19,-20,19,-21,-42,23,19,-39,23,23,23,-31,-30,23,-28,23,23,-29,-19,-20,-21,23,23,23,-23,-38,23,19,-11,19,-14,19,19,-10,19,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'while_do':([0,3,13,31,43,72,74,76,77,79,80,],[10,35,35,35,35,35,35,35,35,35,35,]),'if':([0,3,13,31,43,72,74,76,77,79,80,],[7,33,33,33,33,33,33,33,33,33,33,]),'calc_2':([0,3,13,31,43,72,74,76,77,79,80,],[3,31,43,31,31,76,79,31,80,31,31,]),'empty':([0,],[1,]),'else_statement':([73,],[78,]),'read':([0,3,13,31,43,72,74,76,77,79,80,],[6,32,32,32,32,32,32,32,32,32,32,]),'calc':([0,],[14,]),'var_assign':([0,3,13,31,43,72,74,76,77,79,80,],[15,37,37,37,37,37,37,37,37,37,37,]),'then_statement':([69,],[73,]),'print':([0,3,13,31,43,72,74,76,77,79,80,],[12,36,36,36,36,36,36,36,36,36,36,]),'if_else':([0,3,13,31,43,72,74,76,77,79,80,],[9,34,34,34,34,34,34,34,34,34,34,]),'do_statement':([70,],[75,]),'expression':([0,3,13,16,19,20,21,22,23,24,25,26,27,28,29,31,38,40,41,43,47,72,74,76,77,79,80,],[2,30,30,46,48,49,50,51,52,53,54,55,56,57,58,30,62,63,64,30,68,30,30,30,30,30,30,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> if_else','calc',1,'p_calc','calc.py',163),
  ('calc -> if','calc',1,'p_calc','calc.py',164),
  ('calc -> while_do','calc',1,'p_calc','calc.py',165),
  ('calc -> read TERM','calc',2,'p_calc','calc.py',166),
  ('calc -> print TERM','calc',2,'p_calc','calc.py',167),
  ('calc -> var_assign TERM','calc',2,'p_calc','calc.py',168),
  ('calc -> expression','calc',1,'p_calc','calc.py',169),
  ('calc -> calc_2','calc',1,'p_calc','calc.py',170),
  ('calc -> empty','calc',1,'p_calc','calc.py',171),
  ('if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement','if_else',6,'p_if_else','calc.py',178),
  ('if -> IF LEFT_PAR expression RIGHT_PAR then_statement','if',5,'p_if','calc.py',185),
  ('then_statement -> THEN calc_2','then_statement',2,'p_then_statement','calc.py',192),
  ('else_statement -> ELSE calc_2','else_statement',2,'p_else_statement','calc.py',199),
  ('while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement','while_do',5,'p_while_do','calc.py',206),
  ('do_statement -> DO calc_2','do_statement',2,'p_do_statement','calc.py',213),
  ('calc_2 -> if_else','calc_2',1,'p_calc_2','calc.py',220),
  ('calc_2 -> if','calc_2',1,'p_calc_2','calc.py',221),
  ('calc_2 -> while_do','calc_2',1,'p_calc_2','calc.py',222),
  ('calc_2 -> read TERM','calc_2',2,'p_calc_2','calc.py',223),
  ('calc_2 -> print TERM','calc_2',2,'p_calc_2','calc.py',224),
  ('calc_2 -> var_assign TERM','calc_2',2,'p_calc_2','calc.py',225),
  ('calc_2 -> expression','calc_2',1,'p_calc_2','calc.py',226),
  ('calc_2 -> LEFT_KEY calc_2 RIGHT_KEY','calc_2',3,'p_calc_2_keys','calc.py',233),
  ('calc_2 -> calc_2 calc_2','calc_2',2,'p_calc_2_subtasks','calc.py',240),
  ('var_assign -> NAME EQUALS expression','var_assign',3,'p_var_assign','calc.py',247),
  ('read -> NAME EQUALS INPUT','read',3,'p_read','calc.py',254),
  ('print -> PRINT LEFT_PAR expression RIGHT_PAR','print',4,'p_print','calc.py',261),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','calc.py',268),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','calc.py',269),
  ('expression -> expression PLUS expression','expression',3,'p_expression','calc.py',270),
  ('expression -> expression MINUS expression','expression',3,'p_expression','calc.py',271),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','calc.py',272),
  ('expression -> expression LESSTHANEQ expression','expression',3,'p_expression','calc.py',273),
  ('expression -> expression GREATTHAN expression','expression',3,'p_expression','calc.py',274),
  ('expression -> expression GREATTHANEQ expression','expression',3,'p_expression','calc.py',275),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression','calc.py',276),
  ('expression -> expression ISEQUAL expression','expression',3,'p_expression','calc.py',277),
  ('expression -> LEFT_PAR expression RIGHT_PAR','expression',3,'p_expression_left_right_par','calc.py',284),
  ('expression -> MINUS expression','expression',2,'p_expression_minus','calc.py',291),
  ('expression -> INT','expression',1,'p_expression_int_float','calc.py',298),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','calc.py',299),
  ('expression -> NAME','expression',1,'p_expression_var','calc.py',306),
  ('empty -> <empty>','empty',0,'p_empty','calc.py',317),
]
