
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSTHANEQGREATTHANEQnonassocLESSTHANGREATTHANleftPLUSMINUSleftMULTIPLYDIVIDEleftIFleftELSEleftDODIVIDE DO ELSE EQUALS FLOAT GREATTHAN GREATTHANEQ IF INPUT INT ISEQUAL LEFT_KEY LEFT_PAR LESSTHAN LESSTHANEQ MINUS MULTIPLY NAME NOTEQUAL PLUS PRINT RIGHT_KEY RIGHT_PAR TERM THEN WHILE\n\tcalc : calc_2 \n\t\n\tif_else : IF LEFT_PAR expression RIGHT_PAR then_statement else_statement\n\t\n\tif : IF LEFT_PAR expression RIGHT_PAR then_statement\n\t\n\telse_statement : ELSE calc_2\n\t\n\tthen_statement : THEN calc_2 \n\t\n\tdo_statement : DO calc_2\n\t\n\twhile_do : WHILE LEFT_PAR expression RIGHT_PAR do_statement\n\t\n\tcalc_2 : if_else \n\t\t | if \n\t\t | while_do \n\t\t | read TERM\n\t\t | print TERM\n\t\t | var_assign TERM\n\t\t | expression\n\t\n\tcalc_2 : LEFT_KEY calc_2 RIGHT_KEY \n\t\n\tcalc_2 : calc_2 calc_2\n\t\n\tvar_assign : NAME EQUALS expression\n\t\n\tread : NAME EQUALS INPUT\n\t\n\tprint : PRINT LEFT_PAR expression RIGHT_PAR\n\t\n\texpression : expression MULTIPLY expression\n\t\t\t   | expression DIVIDE expression\n\t\t\t   | expression PLUS expression\n\t\t\t   | expression MINUS expression\n\t\t\t   | expression LESSTHAN expression\n\t\t\t   | expression LESSTHANEQ expression\n\t\t\t   | expression GREATTHAN expression\n\t\t\t   | expression GREATTHANEQ expression\n\t\t\t   | expression NOTEQUAL expression\n\t\t\t   | expression ISEQUAL expression\n\t\n\texpression : LEFT_PAR expression RIGHT_PAR\n\t\n\texpression : MINUS expression\n\t\n\texpression : INT\n\t\t\t   | FLOAT\n\t\n\texpression : NAME\n\t\n\tempty :\n\t'
    
_lr_action_items = {'DO':([59,],[63,]),'LESSTHANEQ':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,31,31,-34,-31,31,31,31,-30,31,-23,None,31,-21,-26,-20,None,31,-24,-22,]),'IF':([0,1,3,7,8,10,12,14,17,18,21,23,24,26,28,29,40,45,46,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[2,-9,-32,-34,2,-33,-10,-8,-14,2,-12,2,-11,-34,-31,-13,2,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,2,-3,2,-7,2,2,-2,-6,-4,]),'INT':([0,1,3,7,8,10,11,12,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,45,46,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[3,-9,-32,-34,3,-33,3,-10,-8,3,-14,3,3,3,-12,3,3,-11,-34,3,-31,-13,3,3,3,3,3,3,3,3,3,3,3,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,3,-3,3,-7,3,3,-2,-6,-4,]),'INPUT':([22,],[43,]),'TERM':([3,6,9,10,16,26,28,43,44,46,48,49,50,51,52,53,54,55,56,57,60,],[-32,21,24,-33,29,-34,-31,-18,-17,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,-19,]),'LESSTHAN':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,38,38,-34,-31,38,38,38,-30,38,-23,38,38,-21,None,-20,38,38,None,-22,]),'WHILE':([0,1,3,7,8,10,12,14,17,18,21,23,24,26,28,29,40,45,46,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[5,-9,-32,-34,5,-33,-10,-8,-14,5,-12,5,-11,-34,-31,-13,5,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,5,-3,5,-7,5,5,-2,-6,-4,]),'EQUALS':([7,],[22,]),'DIVIDE':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,33,33,-34,33,33,33,33,-30,33,33,33,33,-21,33,-20,33,33,33,33,]),'NOTEQUAL':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,37,37,-34,-31,37,37,37,-30,37,-23,-25,37,-21,-26,-20,-27,37,-24,-22,]),'NAME':([0,1,3,7,8,10,11,12,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,45,46,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[7,-9,-32,-34,7,-33,26,-10,-8,26,-14,7,26,26,-12,26,7,-11,-34,26,-31,-13,26,26,26,26,26,26,26,26,26,26,7,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,7,-3,7,-7,7,7,-2,-6,-4,]),'LEFT_KEY':([0,1,3,7,8,10,12,14,17,18,21,23,24,26,28,29,40,45,46,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[8,-9,-32,-34,8,-33,-10,-8,-14,8,-12,8,-11,-34,-31,-13,8,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,8,-3,8,-7,8,8,-2,-6,-4,]),'PLUS':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,39,39,-34,-31,39,39,39,-30,39,-23,39,39,-21,39,-20,39,39,39,-22,]),'MULTIPLY':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,35,35,-34,35,35,35,35,-30,35,35,35,35,-21,35,-20,35,35,35,35,]),'FLOAT':([0,1,3,7,8,10,11,12,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,45,46,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[10,-9,-32,-34,10,-33,10,-10,-8,10,-14,10,10,10,-12,10,10,-11,-34,10,-31,-13,10,10,10,10,10,10,10,10,10,10,10,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,10,-3,10,-7,10,10,-2,-6,-4,]),'RIGHT_KEY':([1,3,7,10,12,14,17,21,23,24,26,28,29,40,45,46,48,49,50,51,52,53,54,55,56,57,62,64,65,67,68,69,],[-9,-32,-34,-33,-10,-8,-14,-12,45,-11,-34,-31,-13,-16,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,-3,-7,-5,-2,-6,-4,]),'LEFT_PAR':([0,1,2,3,5,7,8,10,11,12,13,14,15,17,18,19,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,45,46,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[11,-9,19,-32,20,-34,11,-33,11,-10,27,-8,11,-14,11,11,11,-12,11,11,-11,-34,11,-31,-13,11,11,11,11,11,11,11,11,11,11,11,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,11,-3,11,-7,11,11,-2,-6,-4,]),'THEN':([58,],[61,]),'RIGHT_PAR':([3,10,25,26,28,41,42,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-33,46,-34,-31,58,59,-30,60,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,]),'MINUS':([0,1,3,7,8,10,11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[15,-9,-32,-34,15,-33,15,-10,-8,15,30,15,15,15,-12,15,15,-11,30,-34,15,-31,-13,15,15,15,15,15,15,15,15,15,15,15,30,30,30,-15,-30,30,-23,30,30,-21,30,-20,30,30,30,-22,15,-3,15,-7,15,15,-2,-6,-4,]),'ELSE':([1,3,7,10,12,14,17,21,24,26,28,29,40,45,46,48,49,50,51,52,53,54,55,56,57,62,64,65,67,68,69,],[-9,-32,-34,-33,-10,-8,-14,-12,-11,-34,-31,-13,-16,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,66,-7,-5,-2,-6,-4,]),'$end':([1,3,4,7,10,12,14,17,18,21,24,26,28,29,40,45,46,48,49,50,51,52,53,54,55,56,57,62,64,65,67,68,69,],[-9,-32,0,-34,-33,-10,-8,-14,-1,-12,-11,-34,-31,-13,-16,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,-3,-7,-5,-2,-6,-4,]),'PRINT':([0,1,3,7,8,10,12,14,17,18,21,23,24,26,28,29,40,45,46,48,49,50,51,52,53,54,55,56,57,61,62,63,64,65,66,67,68,69,],[13,-9,-32,-34,13,-33,-10,-8,-14,13,-12,13,-11,-34,-31,-13,13,-15,-30,-23,-25,-29,-21,-26,-20,-27,-28,-24,-22,13,-3,13,-7,13,13,-2,-6,-4,]),'GREATTHAN':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,34,34,-34,-31,34,34,34,-30,34,-23,34,34,-21,None,-20,34,34,None,-22,]),'GREATTHANEQ':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,36,36,-34,-31,36,36,36,-30,36,-23,None,36,-21,-26,-20,None,36,-24,-22,]),'ISEQUAL':([3,7,10,17,25,26,28,41,42,44,46,47,48,49,50,51,52,53,54,55,56,57,],[-32,-34,-33,32,32,-34,-31,32,32,32,-30,32,-23,-25,32,-21,-26,-20,-27,32,-24,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'if':([0,8,18,23,40,61,63,65,66,68,69,],[1,1,1,1,1,1,1,1,1,1,1,]),'while_do':([0,8,18,23,40,61,63,65,66,68,69,],[12,12,12,12,12,12,12,12,12,12,12,]),'calc':([0,],[4,]),'if_else':([0,8,18,23,40,61,63,65,66,68,69,],[14,14,14,14,14,14,14,14,14,14,14,]),'var_assign':([0,8,18,23,40,61,63,65,66,68,69,],[16,16,16,16,16,16,16,16,16,16,16,]),'then_statement':([58,],[62,]),'print':([0,8,18,23,40,61,63,65,66,68,69,],[6,6,6,6,6,6,6,6,6,6,6,]),'expression':([0,8,11,15,18,19,20,22,23,27,30,31,32,33,34,35,36,37,38,39,40,61,63,65,66,68,69,],[17,17,25,28,17,41,42,44,17,47,48,49,50,51,52,53,54,55,56,57,17,17,17,17,17,17,17,]),'do_statement':([59,],[64,]),'else_statement':([62,],[67,]),'read':([0,8,18,23,40,61,63,65,66,68,69,],[9,9,9,9,9,9,9,9,9,9,9,]),'calc_2':([0,8,18,23,40,61,63,65,66,68,69,],[18,23,40,40,40,65,68,40,69,40,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> calc","S'",1,None,None,None),
  ('calc -> calc_2','calc',1,'p_calc','calc.py',164),
  ('if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement','if_else',6,'p_if_else','calc.py',171),
  ('if -> IF LEFT_PAR expression RIGHT_PAR then_statement','if',5,'p_if','calc.py',178),
  ('else_statement -> ELSE calc_2','else_statement',2,'p_else_statement','calc.py',185),
  ('then_statement -> THEN calc_2','then_statement',2,'p_then_statement','calc.py',192),
  ('do_statement -> DO calc_2','do_statement',2,'p_do_statement','calc.py',199),
  ('while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement','while_do',5,'p_while_do','calc.py',206),
  ('calc_2 -> if_else','calc_2',1,'p_calc_2','calc.py',213),
  ('calc_2 -> if','calc_2',1,'p_calc_2','calc.py',214),
  ('calc_2 -> while_do','calc_2',1,'p_calc_2','calc.py',215),
  ('calc_2 -> read TERM','calc_2',2,'p_calc_2','calc.py',216),
  ('calc_2 -> print TERM','calc_2',2,'p_calc_2','calc.py',217),
  ('calc_2 -> var_assign TERM','calc_2',2,'p_calc_2','calc.py',218),
  ('calc_2 -> expression','calc_2',1,'p_calc_2','calc.py',219),
  ('calc_2 -> LEFT_KEY calc_2 RIGHT_KEY','calc_2',3,'p_calc_2_keys','calc.py',226),
  ('calc_2 -> calc_2 calc_2','calc_2',2,'p_calc_2_subtasks','calc.py',233),
  ('var_assign -> NAME EQUALS expression','var_assign',3,'p_var_assign','calc.py',240),
  ('read -> NAME EQUALS INPUT','read',3,'p_read','calc.py',247),
  ('print -> PRINT LEFT_PAR expression RIGHT_PAR','print',4,'p_print','calc.py',254),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression','calc.py',261),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','calc.py',262),
  ('expression -> expression PLUS expression','expression',3,'p_expression','calc.py',263),
  ('expression -> expression MINUS expression','expression',3,'p_expression','calc.py',264),
  ('expression -> expression LESSTHAN expression','expression',3,'p_expression','calc.py',265),
  ('expression -> expression LESSTHANEQ expression','expression',3,'p_expression','calc.py',266),
  ('expression -> expression GREATTHAN expression','expression',3,'p_expression','calc.py',267),
  ('expression -> expression GREATTHANEQ expression','expression',3,'p_expression','calc.py',268),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression','calc.py',269),
  ('expression -> expression ISEQUAL expression','expression',3,'p_expression','calc.py',270),
  ('expression -> LEFT_PAR expression RIGHT_PAR','expression',3,'p_expression_left_right_par','calc.py',277),
  ('expression -> MINUS expression','expression',2,'p_expression_minus','calc.py',284),
  ('expression -> INT','expression',1,'p_expression_int_float','calc.py',291),
  ('expression -> FLOAT','expression',1,'p_expression_int_float','calc.py',292),
  ('expression -> NAME','expression',1,'p_expression_var','calc.py',299),
  ('empty -> <empty>','empty',0,'p_empty','calc.py',310),
]
