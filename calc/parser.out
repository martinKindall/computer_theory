Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> calc
Rule 1     calc -> if_else
Rule 2     calc -> if
Rule 3     calc -> while_do
Rule 4     calc -> read TERM
Rule 5     calc -> print TERM
Rule 6     calc -> var_assign TERM
Rule 7     calc -> expression
Rule 8     calc -> empty
Rule 9     if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
Rule 10    if -> IF LEFT_PAR expression RIGHT_PAR then_statement
Rule 11    then_statement -> THEN var_assign TERM
Rule 12    else_statement -> ELSE var_assign TERM
Rule 13    while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement
Rule 14    do_statement -> DO print
Rule 15    var_assign -> NAME EQUALS expression
Rule 16    read -> NAME EQUALS INPUT
Rule 17    print -> PRINT LEFT_PAR expression RIGHT_PAR
Rule 18    expression -> expression MULTIPLY expression
Rule 19    expression -> expression DIVIDE expression
Rule 20    expression -> expression PLUS expression
Rule 21    expression -> expression MINUS expression
Rule 22    expression -> expression LESSTHAN expression
Rule 23    expression -> expression LESSTHANEQ expression
Rule 24    expression -> expression GREATTHAN expression
Rule 25    expression -> expression GREATTHANEQ expression
Rule 26    expression -> expression NOTEQUAL expression
Rule 27    expression -> expression ISEQUAL expression
Rule 28    expression -> LEFT_PAR expression RIGHT_PAR
Rule 29    expression -> MINUS expression
Rule 30    expression -> INT
Rule 31    expression -> FLOAT
Rule 32    expression -> NAME
Rule 33    empty -> <empty>

Terminals, with rules where they appear

DIVIDE               : 19
DO                   : 14
ELSE                 : 12
EQUALS               : 15 16
FLOAT                : 31
GREATTHAN            : 24
GREATTHANEQ          : 25
IF                   : 9 10
INPUT                : 16
INT                  : 30
ISEQUAL              : 27
LEFT_PAR             : 9 10 13 17 28
LESSTHAN             : 22
LESSTHANEQ           : 23
MINUS                : 21 29
MULTIPLY             : 18
NAME                 : 15 16 32
NOTEQUAL             : 26
PLUS                 : 20
PRINT                : 17
RIGHT_PAR            : 9 10 13 17 28
TERM                 : 4 5 6 11 12
THEN                 : 11
WHILE                : 13
error                : 

Nonterminals, with rules where they appear

calc                 : 0
do_statement         : 13
else_statement       : 9
empty                : 8
expression           : 7 9 10 13 15 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 29
if                   : 2
if_else              : 1
print                : 5 14
read                 : 4
then_statement       : 9 10
var_assign           : 6 11 12
while_do             : 3

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . if_else
    (2) calc -> . if
    (3) calc -> . while_do
    (4) calc -> . read TERM
    (5) calc -> . print TERM
    (6) calc -> . var_assign TERM
    (7) calc -> . expression
    (8) calc -> . empty
    (9) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (10) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (13) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (16) read -> . NAME EQUALS INPUT
    (17) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (15) var_assign -> . NAME EQUALS expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME
    (33) empty -> .

    IF              shift and go to state 16
    WHILE           shift and go to state 6
    NAME            shift and go to state 3
    PRINT           shift and go to state 1
    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    $end            reduce using rule 33 (empty -> .)

    print                          shift and go to state 2
    if_else                        shift and go to state 8
    empty                          shift and go to state 10
    if                             shift and go to state 11
    read                           shift and go to state 12
    expression                     shift and go to state 4
    while_do                       shift and go to state 13
    var_assign                     shift and go to state 14
    calc                           shift and go to state 15

state 1

    (17) print -> PRINT . LEFT_PAR expression RIGHT_PAR

    LEFT_PAR        shift and go to state 18


state 2

    (5) calc -> print . TERM

    TERM            shift and go to state 19


state 3

    (16) read -> NAME . EQUALS INPUT
    (15) var_assign -> NAME . EQUALS expression
    (32) expression -> NAME .

    EQUALS          shift and go to state 20
    MULTIPLY        reduce using rule 32 (expression -> NAME .)
    DIVIDE          reduce using rule 32 (expression -> NAME .)
    PLUS            reduce using rule 32 (expression -> NAME .)
    MINUS           reduce using rule 32 (expression -> NAME .)
    LESSTHAN        reduce using rule 32 (expression -> NAME .)
    LESSTHANEQ      reduce using rule 32 (expression -> NAME .)
    GREATTHAN       reduce using rule 32 (expression -> NAME .)
    GREATTHANEQ     reduce using rule 32 (expression -> NAME .)
    NOTEQUAL        reduce using rule 32 (expression -> NAME .)
    ISEQUAL         reduce using rule 32 (expression -> NAME .)
    $end            reduce using rule 32 (expression -> NAME .)


state 4

    (7) calc -> expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    $end            reduce using rule 7 (calc -> expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    LESSTHANEQ      shift and go to state 21
    GREATTHAN       shift and go to state 29
    GREATTHANEQ     shift and go to state 30
    NOTEQUAL        shift and go to state 28
    ISEQUAL         shift and go to state 25


state 5

    (31) expression -> FLOAT .

    MULTIPLY        reduce using rule 31 (expression -> FLOAT .)
    DIVIDE          reduce using rule 31 (expression -> FLOAT .)
    PLUS            reduce using rule 31 (expression -> FLOAT .)
    MINUS           reduce using rule 31 (expression -> FLOAT .)
    LESSTHAN        reduce using rule 31 (expression -> FLOAT .)
    LESSTHANEQ      reduce using rule 31 (expression -> FLOAT .)
    GREATTHAN       reduce using rule 31 (expression -> FLOAT .)
    GREATTHANEQ     reduce using rule 31 (expression -> FLOAT .)
    NOTEQUAL        reduce using rule 31 (expression -> FLOAT .)
    ISEQUAL         reduce using rule 31 (expression -> FLOAT .)
    $end            reduce using rule 31 (expression -> FLOAT .)
    RIGHT_PAR       reduce using rule 31 (expression -> FLOAT .)
    TERM            reduce using rule 31 (expression -> FLOAT .)


state 6

    (13) while_do -> WHILE . LEFT_PAR expression RIGHT_PAR do_statement

    LEFT_PAR        shift and go to state 31


state 7

    (28) expression -> LEFT_PAR . expression RIGHT_PAR
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 33

state 8

    (1) calc -> if_else .

    $end            reduce using rule 1 (calc -> if_else .)


state 9

    (29) expression -> MINUS . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 34

state 10

    (8) calc -> empty .

    $end            reduce using rule 8 (calc -> empty .)


state 11

    (2) calc -> if .

    $end            reduce using rule 2 (calc -> if .)


state 12

    (4) calc -> read . TERM

    TERM            shift and go to state 35


state 13

    (3) calc -> while_do .

    $end            reduce using rule 3 (calc -> while_do .)


state 14

    (6) calc -> var_assign . TERM

    TERM            shift and go to state 36


state 15

    (0) S' -> calc .



state 16

    (9) if_else -> IF . LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (10) if -> IF . LEFT_PAR expression RIGHT_PAR then_statement

    LEFT_PAR        shift and go to state 37


state 17

    (30) expression -> INT .

    MULTIPLY        reduce using rule 30 (expression -> INT .)
    DIVIDE          reduce using rule 30 (expression -> INT .)
    PLUS            reduce using rule 30 (expression -> INT .)
    MINUS           reduce using rule 30 (expression -> INT .)
    LESSTHAN        reduce using rule 30 (expression -> INT .)
    LESSTHANEQ      reduce using rule 30 (expression -> INT .)
    GREATTHAN       reduce using rule 30 (expression -> INT .)
    GREATTHANEQ     reduce using rule 30 (expression -> INT .)
    NOTEQUAL        reduce using rule 30 (expression -> INT .)
    ISEQUAL         reduce using rule 30 (expression -> INT .)
    $end            reduce using rule 30 (expression -> INT .)
    RIGHT_PAR       reduce using rule 30 (expression -> INT .)
    TERM            reduce using rule 30 (expression -> INT .)


state 18

    (17) print -> PRINT LEFT_PAR . expression RIGHT_PAR
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 38

state 19

    (5) calc -> print TERM .

    $end            reduce using rule 5 (calc -> print TERM .)


state 20

    (16) read -> NAME EQUALS . INPUT
    (15) var_assign -> NAME EQUALS . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    INPUT           shift and go to state 39
    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 40

state 21

    (23) expression -> expression LESSTHANEQ . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 41

state 22

    (20) expression -> expression PLUS . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 42

state 23

    (21) expression -> expression MINUS . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 43

state 24

    (19) expression -> expression DIVIDE . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 44

state 25

    (27) expression -> expression ISEQUAL . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 45

state 26

    (22) expression -> expression LESSTHAN . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 46

state 27

    (18) expression -> expression MULTIPLY . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 47

state 28

    (26) expression -> expression NOTEQUAL . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 48

state 29

    (24) expression -> expression GREATTHAN . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 49

state 30

    (25) expression -> expression GREATTHANEQ . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 50

state 31

    (13) while_do -> WHILE LEFT_PAR . expression RIGHT_PAR do_statement
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 51

state 32

    (32) expression -> NAME .

    MULTIPLY        reduce using rule 32 (expression -> NAME .)
    DIVIDE          reduce using rule 32 (expression -> NAME .)
    PLUS            reduce using rule 32 (expression -> NAME .)
    MINUS           reduce using rule 32 (expression -> NAME .)
    LESSTHAN        reduce using rule 32 (expression -> NAME .)
    LESSTHANEQ      reduce using rule 32 (expression -> NAME .)
    GREATTHAN       reduce using rule 32 (expression -> NAME .)
    GREATTHANEQ     reduce using rule 32 (expression -> NAME .)
    NOTEQUAL        reduce using rule 32 (expression -> NAME .)
    ISEQUAL         reduce using rule 32 (expression -> NAME .)
    $end            reduce using rule 32 (expression -> NAME .)
    RIGHT_PAR       reduce using rule 32 (expression -> NAME .)
    TERM            reduce using rule 32 (expression -> NAME .)


state 33

    (28) expression -> LEFT_PAR expression . RIGHT_PAR
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    RIGHT_PAR       shift and go to state 52
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    LESSTHANEQ      shift and go to state 21
    GREATTHAN       shift and go to state 29
    GREATTHANEQ     shift and go to state 30
    NOTEQUAL        shift and go to state 28
    ISEQUAL         shift and go to state 25


state 34

    (29) expression -> MINUS expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    PLUS            reduce using rule 29 (expression -> MINUS expression .)
    MINUS           reduce using rule 29 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 29 (expression -> MINUS expression .)
    LESSTHANEQ      reduce using rule 29 (expression -> MINUS expression .)
    GREATTHAN       reduce using rule 29 (expression -> MINUS expression .)
    GREATTHANEQ     reduce using rule 29 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 29 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 29 (expression -> MINUS expression .)
    $end            reduce using rule 29 (expression -> MINUS expression .)
    RIGHT_PAR       reduce using rule 29 (expression -> MINUS expression .)
    TERM            reduce using rule 29 (expression -> MINUS expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24

  ! MULTIPLY        [ reduce using rule 29 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! LESSTHAN        [ shift and go to state 26 ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHAN       [ shift and go to state 29 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 35

    (4) calc -> read TERM .

    $end            reduce using rule 4 (calc -> read TERM .)


state 36

    (6) calc -> var_assign TERM .

    $end            reduce using rule 6 (calc -> var_assign TERM .)


state 37

    (9) if_else -> IF LEFT_PAR . expression RIGHT_PAR then_statement else_statement
    (10) if -> IF LEFT_PAR . expression RIGHT_PAR then_statement
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 53

state 38

    (17) print -> PRINT LEFT_PAR expression . RIGHT_PAR
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    RIGHT_PAR       shift and go to state 54
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    LESSTHANEQ      shift and go to state 21
    GREATTHAN       shift and go to state 29
    GREATTHANEQ     shift and go to state 30
    NOTEQUAL        shift and go to state 28
    ISEQUAL         shift and go to state 25


state 39

    (16) read -> NAME EQUALS INPUT .

    TERM            reduce using rule 16 (read -> NAME EQUALS INPUT .)


state 40

    (15) var_assign -> NAME EQUALS expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    TERM            reduce using rule 15 (var_assign -> NAME EQUALS expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    LESSTHANEQ      shift and go to state 21
    GREATTHAN       shift and go to state 29
    GREATTHANEQ     shift and go to state 30
    NOTEQUAL        shift and go to state 28
    ISEQUAL         shift and go to state 25


state 41

    (23) expression -> expression LESSTHANEQ expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    LESSTHANEQ      reduce using rule 23 (expression -> expression LESSTHANEQ expression .)
    GREATTHANEQ     reduce using rule 23 (expression -> expression LESSTHANEQ expression .)
    NOTEQUAL        reduce using rule 23 (expression -> expression LESSTHANEQ expression .)
    ISEQUAL         reduce using rule 23 (expression -> expression LESSTHANEQ expression .)
    $end            reduce using rule 23 (expression -> expression LESSTHANEQ expression .)
    RIGHT_PAR       reduce using rule 23 (expression -> expression LESSTHANEQ expression .)
    TERM            reduce using rule 23 (expression -> expression LESSTHANEQ expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    GREATTHAN       shift and go to state 29

  ! MULTIPLY        [ reduce using rule 23 (expression -> expression LESSTHANEQ expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression LESSTHANEQ expression .) ]
  ! PLUS            [ reduce using rule 23 (expression -> expression LESSTHANEQ expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression LESSTHANEQ expression .) ]
  ! LESSTHAN        [ reduce using rule 23 (expression -> expression LESSTHANEQ expression .) ]
  ! GREATTHAN       [ reduce using rule 23 (expression -> expression LESSTHANEQ expression .) ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 42

    (20) expression -> expression PLUS expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    PLUS            reduce using rule 20 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 20 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 20 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 20 (expression -> expression PLUS expression .)
    GREATTHAN       reduce using rule 20 (expression -> expression PLUS expression .)
    GREATTHANEQ     reduce using rule 20 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 20 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 20 (expression -> expression PLUS expression .)
    $end            reduce using rule 20 (expression -> expression PLUS expression .)
    RIGHT_PAR       reduce using rule 20 (expression -> expression PLUS expression .)
    TERM            reduce using rule 20 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24

  ! MULTIPLY        [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! LESSTHAN        [ shift and go to state 26 ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHAN       [ shift and go to state 29 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 43

    (21) expression -> expression MINUS expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    PLUS            reduce using rule 21 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 21 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 21 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 21 (expression -> expression MINUS expression .)
    GREATTHAN       reduce using rule 21 (expression -> expression MINUS expression .)
    GREATTHANEQ     reduce using rule 21 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 21 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 21 (expression -> expression MINUS expression .)
    $end            reduce using rule 21 (expression -> expression MINUS expression .)
    RIGHT_PAR       reduce using rule 21 (expression -> expression MINUS expression .)
    TERM            reduce using rule 21 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24

  ! MULTIPLY        [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 21 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! LESSTHAN        [ shift and go to state 26 ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHAN       [ shift and go to state 29 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 44

    (19) expression -> expression DIVIDE expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    MULTIPLY        reduce using rule 19 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 19 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 19 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 19 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 19 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 19 (expression -> expression DIVIDE expression .)
    GREATTHAN       reduce using rule 19 (expression -> expression DIVIDE expression .)
    GREATTHANEQ     reduce using rule 19 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 19 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 19 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 19 (expression -> expression DIVIDE expression .)
    RIGHT_PAR       reduce using rule 19 (expression -> expression DIVIDE expression .)
    TERM            reduce using rule 19 (expression -> expression DIVIDE expression .)

  ! MULTIPLY        [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! LESSTHAN        [ shift and go to state 26 ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHAN       [ shift and go to state 29 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 45

    (27) expression -> expression ISEQUAL expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATTHAN resolved as shift
  ! shift/reduce conflict for GREATTHANEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
    $end            reduce using rule 27 (expression -> expression ISEQUAL expression .)
    RIGHT_PAR       reduce using rule 27 (expression -> expression ISEQUAL expression .)
    TERM            reduce using rule 27 (expression -> expression ISEQUAL expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    LESSTHANEQ      shift and go to state 21
    GREATTHAN       shift and go to state 29
    GREATTHANEQ     shift and go to state 30
    NOTEQUAL        shift and go to state 28
    ISEQUAL         shift and go to state 25

  ! MULTIPLY        [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! LESSTHANEQ      [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! GREATTHAN       [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! GREATTHANEQ     [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 27 (expression -> expression ISEQUAL expression .) ]


state 46

    (22) expression -> expression LESSTHAN expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    LESSTHAN        reduce using rule 22 (expression -> expression LESSTHAN expression .)
    LESSTHANEQ      reduce using rule 22 (expression -> expression LESSTHAN expression .)
    GREATTHAN       reduce using rule 22 (expression -> expression LESSTHAN expression .)
    GREATTHANEQ     reduce using rule 22 (expression -> expression LESSTHAN expression .)
    NOTEQUAL        reduce using rule 22 (expression -> expression LESSTHAN expression .)
    ISEQUAL         reduce using rule 22 (expression -> expression LESSTHAN expression .)
    $end            reduce using rule 22 (expression -> expression LESSTHAN expression .)
    RIGHT_PAR       reduce using rule 22 (expression -> expression LESSTHAN expression .)
    TERM            reduce using rule 22 (expression -> expression LESSTHAN expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! MULTIPLY        [ reduce using rule 22 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression LESSTHAN expression .) ]
  ! PLUS            [ reduce using rule 22 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 22 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ shift and go to state 26 ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHAN       [ shift and go to state 29 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 47

    (18) expression -> expression MULTIPLY expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    MULTIPLY        reduce using rule 18 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 18 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 18 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 18 (expression -> expression MULTIPLY expression .)
    LESSTHAN        reduce using rule 18 (expression -> expression MULTIPLY expression .)
    LESSTHANEQ      reduce using rule 18 (expression -> expression MULTIPLY expression .)
    GREATTHAN       reduce using rule 18 (expression -> expression MULTIPLY expression .)
    GREATTHANEQ     reduce using rule 18 (expression -> expression MULTIPLY expression .)
    NOTEQUAL        reduce using rule 18 (expression -> expression MULTIPLY expression .)
    ISEQUAL         reduce using rule 18 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 18 (expression -> expression MULTIPLY expression .)
    RIGHT_PAR       reduce using rule 18 (expression -> expression MULTIPLY expression .)
    TERM            reduce using rule 18 (expression -> expression MULTIPLY expression .)

  ! MULTIPLY        [ shift and go to state 27 ]
  ! DIVIDE          [ shift and go to state 24 ]
  ! PLUS            [ shift and go to state 22 ]
  ! MINUS           [ shift and go to state 23 ]
  ! LESSTHAN        [ shift and go to state 26 ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHAN       [ shift and go to state 29 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 48

    (26) expression -> expression NOTEQUAL expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATTHAN resolved as shift
  ! shift/reduce conflict for GREATTHANEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
    $end            reduce using rule 26 (expression -> expression NOTEQUAL expression .)
    RIGHT_PAR       reduce using rule 26 (expression -> expression NOTEQUAL expression .)
    TERM            reduce using rule 26 (expression -> expression NOTEQUAL expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    LESSTHANEQ      shift and go to state 21
    GREATTHAN       shift and go to state 29
    GREATTHANEQ     shift and go to state 30
    NOTEQUAL        shift and go to state 28
    ISEQUAL         shift and go to state 25

  ! MULTIPLY        [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHANEQ      [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! GREATTHAN       [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! GREATTHANEQ     [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 26 (expression -> expression NOTEQUAL expression .) ]


state 49

    (24) expression -> expression GREATTHAN expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    LESSTHAN        reduce using rule 24 (expression -> expression GREATTHAN expression .)
    LESSTHANEQ      reduce using rule 24 (expression -> expression GREATTHAN expression .)
    GREATTHAN       reduce using rule 24 (expression -> expression GREATTHAN expression .)
    GREATTHANEQ     reduce using rule 24 (expression -> expression GREATTHAN expression .)
    NOTEQUAL        reduce using rule 24 (expression -> expression GREATTHAN expression .)
    ISEQUAL         reduce using rule 24 (expression -> expression GREATTHAN expression .)
    $end            reduce using rule 24 (expression -> expression GREATTHAN expression .)
    RIGHT_PAR       reduce using rule 24 (expression -> expression GREATTHAN expression .)
    TERM            reduce using rule 24 (expression -> expression GREATTHAN expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! MULTIPLY        [ reduce using rule 24 (expression -> expression GREATTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression GREATTHAN expression .) ]
  ! PLUS            [ reduce using rule 24 (expression -> expression GREATTHAN expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression GREATTHAN expression .) ]
  ! LESSTHAN        [ shift and go to state 26 ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHAN       [ shift and go to state 29 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 50

    (25) expression -> expression GREATTHANEQ expression .
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    LESSTHANEQ      reduce using rule 25 (expression -> expression GREATTHANEQ expression .)
    GREATTHANEQ     reduce using rule 25 (expression -> expression GREATTHANEQ expression .)
    NOTEQUAL        reduce using rule 25 (expression -> expression GREATTHANEQ expression .)
    ISEQUAL         reduce using rule 25 (expression -> expression GREATTHANEQ expression .)
    $end            reduce using rule 25 (expression -> expression GREATTHANEQ expression .)
    RIGHT_PAR       reduce using rule 25 (expression -> expression GREATTHANEQ expression .)
    TERM            reduce using rule 25 (expression -> expression GREATTHANEQ expression .)
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    GREATTHAN       shift and go to state 29

  ! MULTIPLY        [ reduce using rule 25 (expression -> expression GREATTHANEQ expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression GREATTHANEQ expression .) ]
  ! PLUS            [ reduce using rule 25 (expression -> expression GREATTHANEQ expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression GREATTHANEQ expression .) ]
  ! LESSTHAN        [ reduce using rule 25 (expression -> expression GREATTHANEQ expression .) ]
  ! GREATTHAN       [ reduce using rule 25 (expression -> expression GREATTHANEQ expression .) ]
  ! LESSTHANEQ      [ shift and go to state 21 ]
  ! GREATTHANEQ     [ shift and go to state 30 ]
  ! NOTEQUAL        [ shift and go to state 28 ]
  ! ISEQUAL         [ shift and go to state 25 ]


state 51

    (13) while_do -> WHILE LEFT_PAR expression . RIGHT_PAR do_statement
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    RIGHT_PAR       shift and go to state 55
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    LESSTHANEQ      shift and go to state 21
    GREATTHAN       shift and go to state 29
    GREATTHANEQ     shift and go to state 30
    NOTEQUAL        shift and go to state 28
    ISEQUAL         shift and go to state 25


state 52

    (28) expression -> LEFT_PAR expression RIGHT_PAR .

    MULTIPLY        reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    DIVIDE          reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    PLUS            reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    MINUS           reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LESSTHAN        reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LESSTHANEQ      reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    GREATTHAN       reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    GREATTHANEQ     reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    NOTEQUAL        reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    ISEQUAL         reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    $end            reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    RIGHT_PAR       reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)
    TERM            reduce using rule 28 (expression -> LEFT_PAR expression RIGHT_PAR .)


state 53

    (9) if_else -> IF LEFT_PAR expression . RIGHT_PAR then_statement else_statement
    (10) if -> IF LEFT_PAR expression . RIGHT_PAR then_statement
    (18) expression -> expression . MULTIPLY expression
    (19) expression -> expression . DIVIDE expression
    (20) expression -> expression . PLUS expression
    (21) expression -> expression . MINUS expression
    (22) expression -> expression . LESSTHAN expression
    (23) expression -> expression . LESSTHANEQ expression
    (24) expression -> expression . GREATTHAN expression
    (25) expression -> expression . GREATTHANEQ expression
    (26) expression -> expression . NOTEQUAL expression
    (27) expression -> expression . ISEQUAL expression

    RIGHT_PAR       shift and go to state 56
    MULTIPLY        shift and go to state 27
    DIVIDE          shift and go to state 24
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    LESSTHAN        shift and go to state 26
    LESSTHANEQ      shift and go to state 21
    GREATTHAN       shift and go to state 29
    GREATTHANEQ     shift and go to state 30
    NOTEQUAL        shift and go to state 28
    ISEQUAL         shift and go to state 25


state 54

    (17) print -> PRINT LEFT_PAR expression RIGHT_PAR .

    $end            reduce using rule 17 (print -> PRINT LEFT_PAR expression RIGHT_PAR .)
    TERM            reduce using rule 17 (print -> PRINT LEFT_PAR expression RIGHT_PAR .)


state 55

    (13) while_do -> WHILE LEFT_PAR expression RIGHT_PAR . do_statement
    (14) do_statement -> . DO print

    DO              shift and go to state 57

    do_statement                   shift and go to state 58

state 56

    (9) if_else -> IF LEFT_PAR expression RIGHT_PAR . then_statement else_statement
    (10) if -> IF LEFT_PAR expression RIGHT_PAR . then_statement
    (11) then_statement -> . THEN var_assign TERM

    THEN            shift and go to state 60

    then_statement                 shift and go to state 59

state 57

    (14) do_statement -> DO . print
    (17) print -> . PRINT LEFT_PAR expression RIGHT_PAR

    PRINT           shift and go to state 1

    print                          shift and go to state 61

state 58

    (13) while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .

    $end            reduce using rule 13 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)


state 59

    (9) if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement . else_statement
    (10) if -> IF LEFT_PAR expression RIGHT_PAR then_statement .
    (12) else_statement -> . ELSE var_assign TERM

    $end            reduce using rule 10 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    ELSE            shift and go to state 62

    else_statement                 shift and go to state 63

state 60

    (11) then_statement -> THEN . var_assign TERM
    (15) var_assign -> . NAME EQUALS expression

    NAME            shift and go to state 65

    var_assign                     shift and go to state 64

state 61

    (14) do_statement -> DO print .

    $end            reduce using rule 14 (do_statement -> DO print .)


state 62

    (12) else_statement -> ELSE . var_assign TERM
    (15) var_assign -> . NAME EQUALS expression

    NAME            shift and go to state 65

    var_assign                     shift and go to state 66

state 63

    (9) if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .

    $end            reduce using rule 9 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)


state 64

    (11) then_statement -> THEN var_assign . TERM

    TERM            shift and go to state 67


state 65

    (15) var_assign -> NAME . EQUALS expression

    EQUALS          shift and go to state 68


state 66

    (12) else_statement -> ELSE var_assign . TERM

    TERM            shift and go to state 69


state 67

    (11) then_statement -> THEN var_assign TERM .

    ELSE            reduce using rule 11 (then_statement -> THEN var_assign TERM .)
    $end            reduce using rule 11 (then_statement -> THEN var_assign TERM .)


state 68

    (15) var_assign -> NAME EQUALS . expression
    (18) expression -> . expression MULTIPLY expression
    (19) expression -> . expression DIVIDE expression
    (20) expression -> . expression PLUS expression
    (21) expression -> . expression MINUS expression
    (22) expression -> . expression LESSTHAN expression
    (23) expression -> . expression LESSTHANEQ expression
    (24) expression -> . expression GREATTHAN expression
    (25) expression -> . expression GREATTHANEQ expression
    (26) expression -> . expression NOTEQUAL expression
    (27) expression -> . expression ISEQUAL expression
    (28) expression -> . LEFT_PAR expression RIGHT_PAR
    (29) expression -> . MINUS expression
    (30) expression -> . INT
    (31) expression -> . FLOAT
    (32) expression -> . NAME

    LEFT_PAR        shift and go to state 7
    MINUS           shift and go to state 9
    INT             shift and go to state 17
    FLOAT           shift and go to state 5
    NAME            shift and go to state 32

    expression                     shift and go to state 40

state 69

    (12) else_statement -> ELSE var_assign TERM .

    $end            reduce using rule 12 (else_statement -> ELSE var_assign TERM .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MULTIPLY in state 45 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 45 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 45 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 45 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 45 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATTHAN in state 45 resolved as shift
WARNING: shift/reduce conflict for GREATTHANEQ in state 45 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 45 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 48 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATTHAN in state 48 resolved as shift
WARNING: shift/reduce conflict for GREATTHANEQ in state 48 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 48 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 48 resolved as shift
