Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> calc
Rule 1     calc -> calc_2
Rule 2     if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
Rule 3     if -> IF LEFT_PAR expression RIGHT_PAR then_statement
Rule 4     else_statement -> ELSE calc_2
Rule 5     then_statement -> THEN calc_2
Rule 6     do_statement -> DO calc_2
Rule 7     while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement
Rule 8     calc_2 -> if_else
Rule 9     calc_2 -> if
Rule 10    calc_2 -> while_do
Rule 11    calc_2 -> read TERM
Rule 12    calc_2 -> print TERM
Rule 13    calc_2 -> var_assign TERM
Rule 14    calc_2 -> expression
Rule 15    calc_2 -> LEFT_KEY calc_2 RIGHT_KEY
Rule 16    calc_2 -> calc_2 calc_2
Rule 17    var_assign -> NAME EQUALS expression
Rule 18    read -> NAME EQUALS INPUT
Rule 19    print -> PRINT LEFT_PAR expression RIGHT_PAR
Rule 20    expression -> expression MULTIPLY expression
Rule 21    expression -> expression DIVIDE expression
Rule 22    expression -> expression PLUS expression
Rule 23    expression -> expression MINUS expression
Rule 24    expression -> expression LESSTHAN expression
Rule 25    expression -> expression LESSTHANEQ expression
Rule 26    expression -> expression GREATTHAN expression
Rule 27    expression -> expression GREATTHANEQ expression
Rule 28    expression -> expression NOTEQUAL expression
Rule 29    expression -> expression ISEQUAL expression
Rule 30    expression -> LEFT_PAR expression RIGHT_PAR
Rule 31    expression -> MINUS expression
Rule 32    expression -> INT
Rule 33    expression -> FLOAT
Rule 34    expression -> NAME
Rule 35    empty -> <empty>

Terminals, with rules where they appear

DIVIDE               : 21
DO                   : 6
ELSE                 : 4
EQUALS               : 17 18
FLOAT                : 33
GREATTHAN            : 26
GREATTHANEQ          : 27
IF                   : 2 3
INPUT                : 18
INT                  : 32
ISEQUAL              : 29
LEFT_KEY             : 15
LEFT_PAR             : 2 3 7 19 30
LESSTHAN             : 24
LESSTHANEQ           : 25
MINUS                : 23 31
MULTIPLY             : 20
NAME                 : 17 18 34
NOTEQUAL             : 28
PLUS                 : 22
PRINT                : 19
RIGHT_KEY            : 15
RIGHT_PAR            : 2 3 7 19 30
TERM                 : 11 12 13
THEN                 : 5
WHILE                : 7
error                : 

Nonterminals, with rules where they appear

calc                 : 0
calc_2               : 1 4 5 6 15 16 16
do_statement         : 7
else_statement       : 2
empty                : 
expression           : 2 3 7 14 17 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31
if                   : 9
if_else              : 8
print                : 12
read                 : 11
then_statement       : 2 3
var_assign           : 13
while_do             : 10

Parsing method: LALR

state 0

    (0) S' -> . calc
    (1) calc -> . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_KEY        shift and go to state 8
    IF              shift and go to state 3
    WHILE           shift and go to state 18
    NAME            shift and go to state 12
    PRINT           shift and go to state 16
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17

    calc_2                         shift and go to state 11
    print                          shift and go to state 1
    expression                     shift and go to state 15
    if_else                        shift and go to state 13
    calc                           shift and go to state 14
    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    var_assign                     shift and go to state 2

state 1

    (12) calc_2 -> print . TERM

    TERM            shift and go to state 19


state 2

    (13) calc_2 -> var_assign . TERM

    TERM            shift and go to state 20


state 3

    (2) if_else -> IF . LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> IF . LEFT_PAR expression RIGHT_PAR then_statement

    LEFT_PAR        shift and go to state 21


state 4

    (32) expression -> INT .

    MULTIPLY        reduce using rule 32 (expression -> INT .)
    DIVIDE          reduce using rule 32 (expression -> INT .)
    PLUS            reduce using rule 32 (expression -> INT .)
    MINUS           reduce using rule 32 (expression -> INT .)
    LESSTHAN        reduce using rule 32 (expression -> INT .)
    LESSTHANEQ      reduce using rule 32 (expression -> INT .)
    GREATTHAN       reduce using rule 32 (expression -> INT .)
    GREATTHANEQ     reduce using rule 32 (expression -> INT .)
    NOTEQUAL        reduce using rule 32 (expression -> INT .)
    ISEQUAL         reduce using rule 32 (expression -> INT .)
    LEFT_KEY        reduce using rule 32 (expression -> INT .)
    IF              reduce using rule 32 (expression -> INT .)
    WHILE           reduce using rule 32 (expression -> INT .)
    NAME            reduce using rule 32 (expression -> INT .)
    PRINT           reduce using rule 32 (expression -> INT .)
    LEFT_PAR        reduce using rule 32 (expression -> INT .)
    INT             reduce using rule 32 (expression -> INT .)
    FLOAT           reduce using rule 32 (expression -> INT .)
    $end            reduce using rule 32 (expression -> INT .)
    RIGHT_KEY       reduce using rule 32 (expression -> INT .)
    ELSE            reduce using rule 32 (expression -> INT .)
    RIGHT_PAR       reduce using rule 32 (expression -> INT .)
    TERM            reduce using rule 32 (expression -> INT .)


state 5

    (10) calc_2 -> while_do .

    LEFT_KEY        reduce using rule 10 (calc_2 -> while_do .)
    IF              reduce using rule 10 (calc_2 -> while_do .)
    WHILE           reduce using rule 10 (calc_2 -> while_do .)
    NAME            reduce using rule 10 (calc_2 -> while_do .)
    PRINT           reduce using rule 10 (calc_2 -> while_do .)
    LEFT_PAR        reduce using rule 10 (calc_2 -> while_do .)
    MINUS           reduce using rule 10 (calc_2 -> while_do .)
    INT             reduce using rule 10 (calc_2 -> while_do .)
    FLOAT           reduce using rule 10 (calc_2 -> while_do .)
    $end            reduce using rule 10 (calc_2 -> while_do .)
    RIGHT_KEY       reduce using rule 10 (calc_2 -> while_do .)
    ELSE            reduce using rule 10 (calc_2 -> while_do .)


state 6

    (11) calc_2 -> read . TERM

    TERM            shift and go to state 22


state 7

    (9) calc_2 -> if .

    LEFT_KEY        reduce using rule 9 (calc_2 -> if .)
    IF              reduce using rule 9 (calc_2 -> if .)
    WHILE           reduce using rule 9 (calc_2 -> if .)
    NAME            reduce using rule 9 (calc_2 -> if .)
    PRINT           reduce using rule 9 (calc_2 -> if .)
    LEFT_PAR        reduce using rule 9 (calc_2 -> if .)
    MINUS           reduce using rule 9 (calc_2 -> if .)
    INT             reduce using rule 9 (calc_2 -> if .)
    FLOAT           reduce using rule 9 (calc_2 -> if .)
    $end            reduce using rule 9 (calc_2 -> if .)
    RIGHT_KEY       reduce using rule 9 (calc_2 -> if .)
    ELSE            reduce using rule 9 (calc_2 -> if .)


state 8

    (15) calc_2 -> LEFT_KEY . calc_2 RIGHT_KEY
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_KEY        shift and go to state 8
    IF              shift and go to state 3
    WHILE           shift and go to state 18
    NAME            shift and go to state 12
    PRINT           shift and go to state 16
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 23
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 9

    (30) expression -> LEFT_PAR . expression RIGHT_PAR
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 25

state 10

    (31) expression -> MINUS . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 26

state 11

    (1) calc -> calc_2 .
    (16) calc_2 -> calc_2 . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    $end            reduce using rule 1 (calc -> calc_2 .)
    LEFT_KEY        shift and go to state 8
    IF              shift and go to state 3
    WHILE           shift and go to state 18
    NAME            shift and go to state 12
    PRINT           shift and go to state 16
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 27
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 12

    (18) read -> NAME . EQUALS INPUT
    (17) var_assign -> NAME . EQUALS expression
    (34) expression -> NAME .

    EQUALS          shift and go to state 28
    MULTIPLY        reduce using rule 34 (expression -> NAME .)
    DIVIDE          reduce using rule 34 (expression -> NAME .)
    PLUS            reduce using rule 34 (expression -> NAME .)
    MINUS           reduce using rule 34 (expression -> NAME .)
    LESSTHAN        reduce using rule 34 (expression -> NAME .)
    LESSTHANEQ      reduce using rule 34 (expression -> NAME .)
    GREATTHAN       reduce using rule 34 (expression -> NAME .)
    GREATTHANEQ     reduce using rule 34 (expression -> NAME .)
    NOTEQUAL        reduce using rule 34 (expression -> NAME .)
    ISEQUAL         reduce using rule 34 (expression -> NAME .)
    LEFT_KEY        reduce using rule 34 (expression -> NAME .)
    IF              reduce using rule 34 (expression -> NAME .)
    WHILE           reduce using rule 34 (expression -> NAME .)
    NAME            reduce using rule 34 (expression -> NAME .)
    PRINT           reduce using rule 34 (expression -> NAME .)
    LEFT_PAR        reduce using rule 34 (expression -> NAME .)
    INT             reduce using rule 34 (expression -> NAME .)
    FLOAT           reduce using rule 34 (expression -> NAME .)
    $end            reduce using rule 34 (expression -> NAME .)
    RIGHT_KEY       reduce using rule 34 (expression -> NAME .)
    ELSE            reduce using rule 34 (expression -> NAME .)


state 13

    (8) calc_2 -> if_else .

    LEFT_KEY        reduce using rule 8 (calc_2 -> if_else .)
    IF              reduce using rule 8 (calc_2 -> if_else .)
    WHILE           reduce using rule 8 (calc_2 -> if_else .)
    NAME            reduce using rule 8 (calc_2 -> if_else .)
    PRINT           reduce using rule 8 (calc_2 -> if_else .)
    LEFT_PAR        reduce using rule 8 (calc_2 -> if_else .)
    MINUS           reduce using rule 8 (calc_2 -> if_else .)
    INT             reduce using rule 8 (calc_2 -> if_else .)
    FLOAT           reduce using rule 8 (calc_2 -> if_else .)
    $end            reduce using rule 8 (calc_2 -> if_else .)
    RIGHT_KEY       reduce using rule 8 (calc_2 -> if_else .)
    ELSE            reduce using rule 8 (calc_2 -> if_else .)


state 14

    (0) S' -> calc .



state 15

    (14) calc_2 -> expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

  ! shift/reduce conflict for MINUS resolved as shift
    LEFT_KEY        reduce using rule 14 (calc_2 -> expression .)
    IF              reduce using rule 14 (calc_2 -> expression .)
    WHILE           reduce using rule 14 (calc_2 -> expression .)
    NAME            reduce using rule 14 (calc_2 -> expression .)
    PRINT           reduce using rule 14 (calc_2 -> expression .)
    LEFT_PAR        reduce using rule 14 (calc_2 -> expression .)
    INT             reduce using rule 14 (calc_2 -> expression .)
    FLOAT           reduce using rule 14 (calc_2 -> expression .)
    $end            reduce using rule 14 (calc_2 -> expression .)
    RIGHT_KEY       reduce using rule 14 (calc_2 -> expression .)
    ELSE            reduce using rule 14 (calc_2 -> expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    LESSTHANEQ      shift and go to state 31
    GREATTHAN       shift and go to state 37
    GREATTHANEQ     shift and go to state 29
    NOTEQUAL        shift and go to state 33
    ISEQUAL         shift and go to state 35

  ! MINUS           [ reduce using rule 14 (calc_2 -> expression .) ]


state 16

    (19) print -> PRINT . LEFT_PAR expression RIGHT_PAR

    LEFT_PAR        shift and go to state 39


state 17

    (33) expression -> FLOAT .

    MULTIPLY        reduce using rule 33 (expression -> FLOAT .)
    DIVIDE          reduce using rule 33 (expression -> FLOAT .)
    PLUS            reduce using rule 33 (expression -> FLOAT .)
    MINUS           reduce using rule 33 (expression -> FLOAT .)
    LESSTHAN        reduce using rule 33 (expression -> FLOAT .)
    LESSTHANEQ      reduce using rule 33 (expression -> FLOAT .)
    GREATTHAN       reduce using rule 33 (expression -> FLOAT .)
    GREATTHANEQ     reduce using rule 33 (expression -> FLOAT .)
    NOTEQUAL        reduce using rule 33 (expression -> FLOAT .)
    ISEQUAL         reduce using rule 33 (expression -> FLOAT .)
    LEFT_KEY        reduce using rule 33 (expression -> FLOAT .)
    IF              reduce using rule 33 (expression -> FLOAT .)
    WHILE           reduce using rule 33 (expression -> FLOAT .)
    NAME            reduce using rule 33 (expression -> FLOAT .)
    PRINT           reduce using rule 33 (expression -> FLOAT .)
    LEFT_PAR        reduce using rule 33 (expression -> FLOAT .)
    INT             reduce using rule 33 (expression -> FLOAT .)
    FLOAT           reduce using rule 33 (expression -> FLOAT .)
    $end            reduce using rule 33 (expression -> FLOAT .)
    RIGHT_KEY       reduce using rule 33 (expression -> FLOAT .)
    ELSE            reduce using rule 33 (expression -> FLOAT .)
    RIGHT_PAR       reduce using rule 33 (expression -> FLOAT .)
    TERM            reduce using rule 33 (expression -> FLOAT .)


state 18

    (7) while_do -> WHILE . LEFT_PAR expression RIGHT_PAR do_statement

    LEFT_PAR        shift and go to state 40


state 19

    (12) calc_2 -> print TERM .

    LEFT_KEY        reduce using rule 12 (calc_2 -> print TERM .)
    IF              reduce using rule 12 (calc_2 -> print TERM .)
    WHILE           reduce using rule 12 (calc_2 -> print TERM .)
    NAME            reduce using rule 12 (calc_2 -> print TERM .)
    PRINT           reduce using rule 12 (calc_2 -> print TERM .)
    LEFT_PAR        reduce using rule 12 (calc_2 -> print TERM .)
    MINUS           reduce using rule 12 (calc_2 -> print TERM .)
    INT             reduce using rule 12 (calc_2 -> print TERM .)
    FLOAT           reduce using rule 12 (calc_2 -> print TERM .)
    $end            reduce using rule 12 (calc_2 -> print TERM .)
    RIGHT_KEY       reduce using rule 12 (calc_2 -> print TERM .)
    ELSE            reduce using rule 12 (calc_2 -> print TERM .)


state 20

    (13) calc_2 -> var_assign TERM .

    LEFT_KEY        reduce using rule 13 (calc_2 -> var_assign TERM .)
    IF              reduce using rule 13 (calc_2 -> var_assign TERM .)
    WHILE           reduce using rule 13 (calc_2 -> var_assign TERM .)
    NAME            reduce using rule 13 (calc_2 -> var_assign TERM .)
    PRINT           reduce using rule 13 (calc_2 -> var_assign TERM .)
    LEFT_PAR        reduce using rule 13 (calc_2 -> var_assign TERM .)
    MINUS           reduce using rule 13 (calc_2 -> var_assign TERM .)
    INT             reduce using rule 13 (calc_2 -> var_assign TERM .)
    FLOAT           reduce using rule 13 (calc_2 -> var_assign TERM .)
    $end            reduce using rule 13 (calc_2 -> var_assign TERM .)
    RIGHT_KEY       reduce using rule 13 (calc_2 -> var_assign TERM .)
    ELSE            reduce using rule 13 (calc_2 -> var_assign TERM .)


state 21

    (2) if_else -> IF LEFT_PAR . expression RIGHT_PAR then_statement else_statement
    (3) if -> IF LEFT_PAR . expression RIGHT_PAR then_statement
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 41

state 22

    (11) calc_2 -> read TERM .

    LEFT_KEY        reduce using rule 11 (calc_2 -> read TERM .)
    IF              reduce using rule 11 (calc_2 -> read TERM .)
    WHILE           reduce using rule 11 (calc_2 -> read TERM .)
    NAME            reduce using rule 11 (calc_2 -> read TERM .)
    PRINT           reduce using rule 11 (calc_2 -> read TERM .)
    LEFT_PAR        reduce using rule 11 (calc_2 -> read TERM .)
    MINUS           reduce using rule 11 (calc_2 -> read TERM .)
    INT             reduce using rule 11 (calc_2 -> read TERM .)
    FLOAT           reduce using rule 11 (calc_2 -> read TERM .)
    $end            reduce using rule 11 (calc_2 -> read TERM .)
    RIGHT_KEY       reduce using rule 11 (calc_2 -> read TERM .)
    ELSE            reduce using rule 11 (calc_2 -> read TERM .)


state 23

    (15) calc_2 -> LEFT_KEY calc_2 . RIGHT_KEY
    (16) calc_2 -> calc_2 . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    RIGHT_KEY       shift and go to state 42
    LEFT_KEY        shift and go to state 8
    IF              shift and go to state 3
    WHILE           shift and go to state 18
    NAME            shift and go to state 12
    PRINT           shift and go to state 16
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 27
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 24

    (34) expression -> NAME .

    MULTIPLY        reduce using rule 34 (expression -> NAME .)
    DIVIDE          reduce using rule 34 (expression -> NAME .)
    PLUS            reduce using rule 34 (expression -> NAME .)
    MINUS           reduce using rule 34 (expression -> NAME .)
    LESSTHAN        reduce using rule 34 (expression -> NAME .)
    LESSTHANEQ      reduce using rule 34 (expression -> NAME .)
    GREATTHAN       reduce using rule 34 (expression -> NAME .)
    GREATTHANEQ     reduce using rule 34 (expression -> NAME .)
    NOTEQUAL        reduce using rule 34 (expression -> NAME .)
    ISEQUAL         reduce using rule 34 (expression -> NAME .)
    LEFT_KEY        reduce using rule 34 (expression -> NAME .)
    IF              reduce using rule 34 (expression -> NAME .)
    WHILE           reduce using rule 34 (expression -> NAME .)
    NAME            reduce using rule 34 (expression -> NAME .)
    PRINT           reduce using rule 34 (expression -> NAME .)
    LEFT_PAR        reduce using rule 34 (expression -> NAME .)
    INT             reduce using rule 34 (expression -> NAME .)
    FLOAT           reduce using rule 34 (expression -> NAME .)
    $end            reduce using rule 34 (expression -> NAME .)
    RIGHT_KEY       reduce using rule 34 (expression -> NAME .)
    RIGHT_PAR       reduce using rule 34 (expression -> NAME .)
    ELSE            reduce using rule 34 (expression -> NAME .)
    TERM            reduce using rule 34 (expression -> NAME .)


state 25

    (30) expression -> LEFT_PAR expression . RIGHT_PAR
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    RIGHT_PAR       shift and go to state 43
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    LESSTHANEQ      shift and go to state 31
    GREATTHAN       shift and go to state 37
    GREATTHANEQ     shift and go to state 29
    NOTEQUAL        shift and go to state 33
    ISEQUAL         shift and go to state 35


state 26

    (31) expression -> MINUS expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    PLUS            reduce using rule 31 (expression -> MINUS expression .)
    MINUS           reduce using rule 31 (expression -> MINUS expression .)
    LESSTHAN        reduce using rule 31 (expression -> MINUS expression .)
    LESSTHANEQ      reduce using rule 31 (expression -> MINUS expression .)
    GREATTHAN       reduce using rule 31 (expression -> MINUS expression .)
    GREATTHANEQ     reduce using rule 31 (expression -> MINUS expression .)
    NOTEQUAL        reduce using rule 31 (expression -> MINUS expression .)
    ISEQUAL         reduce using rule 31 (expression -> MINUS expression .)
    LEFT_KEY        reduce using rule 31 (expression -> MINUS expression .)
    IF              reduce using rule 31 (expression -> MINUS expression .)
    WHILE           reduce using rule 31 (expression -> MINUS expression .)
    NAME            reduce using rule 31 (expression -> MINUS expression .)
    PRINT           reduce using rule 31 (expression -> MINUS expression .)
    LEFT_PAR        reduce using rule 31 (expression -> MINUS expression .)
    INT             reduce using rule 31 (expression -> MINUS expression .)
    FLOAT           reduce using rule 31 (expression -> MINUS expression .)
    $end            reduce using rule 31 (expression -> MINUS expression .)
    RIGHT_KEY       reduce using rule 31 (expression -> MINUS expression .)
    ELSE            reduce using rule 31 (expression -> MINUS expression .)
    RIGHT_PAR       reduce using rule 31 (expression -> MINUS expression .)
    TERM            reduce using rule 31 (expression -> MINUS expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34

  ! MULTIPLY        [ reduce using rule 31 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHAN       [ shift and go to state 37 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 27

    (16) calc_2 -> calc_2 calc_2 .
    (16) calc_2 -> calc_2 . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

  ! shift/reduce conflict for LEFT_KEY resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for LEFT_PAR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
    $end            reduce using rule 16 (calc_2 -> calc_2 calc_2 .)
    RIGHT_KEY       reduce using rule 16 (calc_2 -> calc_2 calc_2 .)
    ELSE            reduce using rule 16 (calc_2 -> calc_2 calc_2 .)
    LEFT_KEY        shift and go to state 8
    IF              shift and go to state 3
    WHILE           shift and go to state 18
    NAME            shift and go to state 12
    PRINT           shift and go to state 16
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17

  ! LEFT_KEY        [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]
  ! IF              [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]
  ! WHILE           [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]
  ! NAME            [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]
  ! PRINT           [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]
  ! LEFT_PAR        [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]
  ! MINUS           [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]
  ! INT             [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]
  ! FLOAT           [ reduce using rule 16 (calc_2 -> calc_2 calc_2 .) ]

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 27
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 28

    (18) read -> NAME EQUALS . INPUT
    (17) var_assign -> NAME EQUALS . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    INPUT           shift and go to state 44
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 45

state 29

    (27) expression -> expression GREATTHANEQ . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 46

state 30

    (22) expression -> expression PLUS . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 47

state 31

    (25) expression -> expression LESSTHANEQ . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 48

state 32

    (23) expression -> expression MINUS . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 49

state 33

    (28) expression -> expression NOTEQUAL . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 50

state 34

    (21) expression -> expression DIVIDE . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 51

state 35

    (29) expression -> expression ISEQUAL . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 52

state 36

    (20) expression -> expression MULTIPLY . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 53

state 37

    (26) expression -> expression GREATTHAN . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 54

state 38

    (24) expression -> expression LESSTHAN . expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 55

state 39

    (19) print -> PRINT LEFT_PAR . expression RIGHT_PAR
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 56

state 40

    (7) while_do -> WHILE LEFT_PAR . expression RIGHT_PAR do_statement
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17
    NAME            shift and go to state 24

    expression                     shift and go to state 57

state 41

    (2) if_else -> IF LEFT_PAR expression . RIGHT_PAR then_statement else_statement
    (3) if -> IF LEFT_PAR expression . RIGHT_PAR then_statement
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    RIGHT_PAR       shift and go to state 58
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    LESSTHANEQ      shift and go to state 31
    GREATTHAN       shift and go to state 37
    GREATTHANEQ     shift and go to state 29
    NOTEQUAL        shift and go to state 33
    ISEQUAL         shift and go to state 35


state 42

    (15) calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .

    LEFT_KEY        reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    IF              reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    WHILE           reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    NAME            reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    PRINT           reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    LEFT_PAR        reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    MINUS           reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    INT             reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    FLOAT           reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    $end            reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    RIGHT_KEY       reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)
    ELSE            reduce using rule 15 (calc_2 -> LEFT_KEY calc_2 RIGHT_KEY .)


state 43

    (30) expression -> LEFT_PAR expression RIGHT_PAR .

    MULTIPLY        reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    DIVIDE          reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    PLUS            reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    MINUS           reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LESSTHAN        reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LESSTHANEQ      reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    GREATTHAN       reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    GREATTHANEQ     reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    NOTEQUAL        reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    ISEQUAL         reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LEFT_KEY        reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    IF              reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    WHILE           reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    NAME            reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    PRINT           reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    LEFT_PAR        reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    INT             reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    FLOAT           reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    $end            reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    RIGHT_KEY       reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    ELSE            reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    RIGHT_PAR       reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)
    TERM            reduce using rule 30 (expression -> LEFT_PAR expression RIGHT_PAR .)


state 44

    (18) read -> NAME EQUALS INPUT .

    TERM            reduce using rule 18 (read -> NAME EQUALS INPUT .)


state 45

    (17) var_assign -> NAME EQUALS expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    TERM            reduce using rule 17 (var_assign -> NAME EQUALS expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    LESSTHANEQ      shift and go to state 31
    GREATTHAN       shift and go to state 37
    GREATTHANEQ     shift and go to state 29
    NOTEQUAL        shift and go to state 33
    ISEQUAL         shift and go to state 35


state 46

    (27) expression -> expression GREATTHANEQ expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    LESSTHANEQ      reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    GREATTHANEQ     reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    NOTEQUAL        reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    ISEQUAL         reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    LEFT_KEY        reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    IF              reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    WHILE           reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    NAME            reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    PRINT           reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    LEFT_PAR        reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    INT             reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    FLOAT           reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    $end            reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    RIGHT_KEY       reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    ELSE            reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    RIGHT_PAR       reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    TERM            reduce using rule 27 (expression -> expression GREATTHANEQ expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    GREATTHAN       shift and go to state 37

  ! MULTIPLY        [ reduce using rule 27 (expression -> expression GREATTHANEQ expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression GREATTHANEQ expression .) ]
  ! PLUS            [ reduce using rule 27 (expression -> expression GREATTHANEQ expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression GREATTHANEQ expression .) ]
  ! LESSTHAN        [ reduce using rule 27 (expression -> expression GREATTHANEQ expression .) ]
  ! GREATTHAN       [ reduce using rule 27 (expression -> expression GREATTHANEQ expression .) ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 47

    (22) expression -> expression PLUS expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    PLUS            reduce using rule 22 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 22 (expression -> expression PLUS expression .)
    LESSTHAN        reduce using rule 22 (expression -> expression PLUS expression .)
    LESSTHANEQ      reduce using rule 22 (expression -> expression PLUS expression .)
    GREATTHAN       reduce using rule 22 (expression -> expression PLUS expression .)
    GREATTHANEQ     reduce using rule 22 (expression -> expression PLUS expression .)
    NOTEQUAL        reduce using rule 22 (expression -> expression PLUS expression .)
    ISEQUAL         reduce using rule 22 (expression -> expression PLUS expression .)
    LEFT_KEY        reduce using rule 22 (expression -> expression PLUS expression .)
    IF              reduce using rule 22 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 22 (expression -> expression PLUS expression .)
    NAME            reduce using rule 22 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 22 (expression -> expression PLUS expression .)
    LEFT_PAR        reduce using rule 22 (expression -> expression PLUS expression .)
    INT             reduce using rule 22 (expression -> expression PLUS expression .)
    FLOAT           reduce using rule 22 (expression -> expression PLUS expression .)
    $end            reduce using rule 22 (expression -> expression PLUS expression .)
    RIGHT_KEY       reduce using rule 22 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 22 (expression -> expression PLUS expression .)
    RIGHT_PAR       reduce using rule 22 (expression -> expression PLUS expression .)
    TERM            reduce using rule 22 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34

  ! MULTIPLY        [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHAN       [ shift and go to state 37 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 48

    (25) expression -> expression LESSTHANEQ expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    LESSTHANEQ      reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    GREATTHANEQ     reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    NOTEQUAL        reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    ISEQUAL         reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    LEFT_KEY        reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    IF              reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    WHILE           reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    NAME            reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    PRINT           reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    LEFT_PAR        reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    INT             reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    FLOAT           reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    $end            reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    RIGHT_KEY       reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    ELSE            reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    RIGHT_PAR       reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    TERM            reduce using rule 25 (expression -> expression LESSTHANEQ expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    GREATTHAN       shift and go to state 37

  ! MULTIPLY        [ reduce using rule 25 (expression -> expression LESSTHANEQ expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression LESSTHANEQ expression .) ]
  ! PLUS            [ reduce using rule 25 (expression -> expression LESSTHANEQ expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression LESSTHANEQ expression .) ]
  ! LESSTHAN        [ reduce using rule 25 (expression -> expression LESSTHANEQ expression .) ]
  ! GREATTHAN       [ reduce using rule 25 (expression -> expression LESSTHANEQ expression .) ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 49

    (23) expression -> expression MINUS expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    PLUS            reduce using rule 23 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 23 (expression -> expression MINUS expression .)
    LESSTHAN        reduce using rule 23 (expression -> expression MINUS expression .)
    LESSTHANEQ      reduce using rule 23 (expression -> expression MINUS expression .)
    GREATTHAN       reduce using rule 23 (expression -> expression MINUS expression .)
    GREATTHANEQ     reduce using rule 23 (expression -> expression MINUS expression .)
    NOTEQUAL        reduce using rule 23 (expression -> expression MINUS expression .)
    ISEQUAL         reduce using rule 23 (expression -> expression MINUS expression .)
    LEFT_KEY        reduce using rule 23 (expression -> expression MINUS expression .)
    IF              reduce using rule 23 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 23 (expression -> expression MINUS expression .)
    NAME            reduce using rule 23 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 23 (expression -> expression MINUS expression .)
    LEFT_PAR        reduce using rule 23 (expression -> expression MINUS expression .)
    INT             reduce using rule 23 (expression -> expression MINUS expression .)
    FLOAT           reduce using rule 23 (expression -> expression MINUS expression .)
    $end            reduce using rule 23 (expression -> expression MINUS expression .)
    RIGHT_KEY       reduce using rule 23 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 23 (expression -> expression MINUS expression .)
    RIGHT_PAR       reduce using rule 23 (expression -> expression MINUS expression .)
    TERM            reduce using rule 23 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34

  ! MULTIPLY        [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHAN       [ shift and go to state 37 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 50

    (28) expression -> expression NOTEQUAL expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATTHAN resolved as shift
  ! shift/reduce conflict for GREATTHANEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
    LEFT_KEY        reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    NAME            reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    LEFT_PAR        reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    INT             reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    FLOAT           reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    $end            reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    RIGHT_KEY       reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    ELSE            reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    RIGHT_PAR       reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    TERM            reduce using rule 28 (expression -> expression NOTEQUAL expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    LESSTHANEQ      shift and go to state 31
    GREATTHAN       shift and go to state 37
    GREATTHANEQ     shift and go to state 29
    NOTEQUAL        shift and go to state 33
    ISEQUAL         shift and go to state 35

  ! MULTIPLY        [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! LESSTHANEQ      [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! GREATTHAN       [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! GREATTHANEQ     [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 28 (expression -> expression NOTEQUAL expression .) ]


state 51

    (21) expression -> expression DIVIDE expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    MULTIPLY        reduce using rule 21 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 21 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 21 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 21 (expression -> expression DIVIDE expression .)
    LESSTHAN        reduce using rule 21 (expression -> expression DIVIDE expression .)
    LESSTHANEQ      reduce using rule 21 (expression -> expression DIVIDE expression .)
    GREATTHAN       reduce using rule 21 (expression -> expression DIVIDE expression .)
    GREATTHANEQ     reduce using rule 21 (expression -> expression DIVIDE expression .)
    NOTEQUAL        reduce using rule 21 (expression -> expression DIVIDE expression .)
    ISEQUAL         reduce using rule 21 (expression -> expression DIVIDE expression .)
    LEFT_KEY        reduce using rule 21 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 21 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 21 (expression -> expression DIVIDE expression .)
    NAME            reduce using rule 21 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 21 (expression -> expression DIVIDE expression .)
    LEFT_PAR        reduce using rule 21 (expression -> expression DIVIDE expression .)
    INT             reduce using rule 21 (expression -> expression DIVIDE expression .)
    FLOAT           reduce using rule 21 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 21 (expression -> expression DIVIDE expression .)
    RIGHT_KEY       reduce using rule 21 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 21 (expression -> expression DIVIDE expression .)
    RIGHT_PAR       reduce using rule 21 (expression -> expression DIVIDE expression .)
    TERM            reduce using rule 21 (expression -> expression DIVIDE expression .)

  ! MULTIPLY        [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHAN       [ shift and go to state 37 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 52

    (29) expression -> expression ISEQUAL expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LESSTHAN resolved as shift
  ! shift/reduce conflict for LESSTHANEQ resolved as shift
  ! shift/reduce conflict for GREATTHAN resolved as shift
  ! shift/reduce conflict for GREATTHANEQ resolved as shift
  ! shift/reduce conflict for NOTEQUAL resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
    LEFT_KEY        reduce using rule 29 (expression -> expression ISEQUAL expression .)
    IF              reduce using rule 29 (expression -> expression ISEQUAL expression .)
    WHILE           reduce using rule 29 (expression -> expression ISEQUAL expression .)
    NAME            reduce using rule 29 (expression -> expression ISEQUAL expression .)
    PRINT           reduce using rule 29 (expression -> expression ISEQUAL expression .)
    LEFT_PAR        reduce using rule 29 (expression -> expression ISEQUAL expression .)
    INT             reduce using rule 29 (expression -> expression ISEQUAL expression .)
    FLOAT           reduce using rule 29 (expression -> expression ISEQUAL expression .)
    $end            reduce using rule 29 (expression -> expression ISEQUAL expression .)
    RIGHT_KEY       reduce using rule 29 (expression -> expression ISEQUAL expression .)
    ELSE            reduce using rule 29 (expression -> expression ISEQUAL expression .)
    RIGHT_PAR       reduce using rule 29 (expression -> expression ISEQUAL expression .)
    TERM            reduce using rule 29 (expression -> expression ISEQUAL expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    LESSTHANEQ      shift and go to state 31
    GREATTHAN       shift and go to state 37
    GREATTHANEQ     shift and go to state 29
    NOTEQUAL        shift and go to state 33
    ISEQUAL         shift and go to state 35

  ! MULTIPLY        [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! LESSTHAN        [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! LESSTHANEQ      [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! GREATTHAN       [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! GREATTHANEQ     [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! NOTEQUAL        [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]
  ! ISEQUAL         [ reduce using rule 29 (expression -> expression ISEQUAL expression .) ]


state 53

    (20) expression -> expression MULTIPLY expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    MULTIPLY        reduce using rule 20 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 20 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 20 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 20 (expression -> expression MULTIPLY expression .)
    LESSTHAN        reduce using rule 20 (expression -> expression MULTIPLY expression .)
    LESSTHANEQ      reduce using rule 20 (expression -> expression MULTIPLY expression .)
    GREATTHAN       reduce using rule 20 (expression -> expression MULTIPLY expression .)
    GREATTHANEQ     reduce using rule 20 (expression -> expression MULTIPLY expression .)
    NOTEQUAL        reduce using rule 20 (expression -> expression MULTIPLY expression .)
    ISEQUAL         reduce using rule 20 (expression -> expression MULTIPLY expression .)
    LEFT_KEY        reduce using rule 20 (expression -> expression MULTIPLY expression .)
    IF              reduce using rule 20 (expression -> expression MULTIPLY expression .)
    WHILE           reduce using rule 20 (expression -> expression MULTIPLY expression .)
    NAME            reduce using rule 20 (expression -> expression MULTIPLY expression .)
    PRINT           reduce using rule 20 (expression -> expression MULTIPLY expression .)
    LEFT_PAR        reduce using rule 20 (expression -> expression MULTIPLY expression .)
    INT             reduce using rule 20 (expression -> expression MULTIPLY expression .)
    FLOAT           reduce using rule 20 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 20 (expression -> expression MULTIPLY expression .)
    RIGHT_KEY       reduce using rule 20 (expression -> expression MULTIPLY expression .)
    ELSE            reduce using rule 20 (expression -> expression MULTIPLY expression .)
    RIGHT_PAR       reduce using rule 20 (expression -> expression MULTIPLY expression .)
    TERM            reduce using rule 20 (expression -> expression MULTIPLY expression .)

  ! MULTIPLY        [ shift and go to state 36 ]
  ! DIVIDE          [ shift and go to state 34 ]
  ! PLUS            [ shift and go to state 30 ]
  ! MINUS           [ shift and go to state 32 ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHAN       [ shift and go to state 37 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 54

    (26) expression -> expression GREATTHAN expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    LESSTHAN        reduce using rule 26 (expression -> expression GREATTHAN expression .)
    LESSTHANEQ      reduce using rule 26 (expression -> expression GREATTHAN expression .)
    GREATTHAN       reduce using rule 26 (expression -> expression GREATTHAN expression .)
    GREATTHANEQ     reduce using rule 26 (expression -> expression GREATTHAN expression .)
    NOTEQUAL        reduce using rule 26 (expression -> expression GREATTHAN expression .)
    ISEQUAL         reduce using rule 26 (expression -> expression GREATTHAN expression .)
    LEFT_KEY        reduce using rule 26 (expression -> expression GREATTHAN expression .)
    IF              reduce using rule 26 (expression -> expression GREATTHAN expression .)
    WHILE           reduce using rule 26 (expression -> expression GREATTHAN expression .)
    NAME            reduce using rule 26 (expression -> expression GREATTHAN expression .)
    PRINT           reduce using rule 26 (expression -> expression GREATTHAN expression .)
    LEFT_PAR        reduce using rule 26 (expression -> expression GREATTHAN expression .)
    INT             reduce using rule 26 (expression -> expression GREATTHAN expression .)
    FLOAT           reduce using rule 26 (expression -> expression GREATTHAN expression .)
    $end            reduce using rule 26 (expression -> expression GREATTHAN expression .)
    RIGHT_KEY       reduce using rule 26 (expression -> expression GREATTHAN expression .)
    ELSE            reduce using rule 26 (expression -> expression GREATTHAN expression .)
    RIGHT_PAR       reduce using rule 26 (expression -> expression GREATTHAN expression .)
    TERM            reduce using rule 26 (expression -> expression GREATTHAN expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32

  ! MULTIPLY        [ reduce using rule 26 (expression -> expression GREATTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GREATTHAN expression .) ]
  ! PLUS            [ reduce using rule 26 (expression -> expression GREATTHAN expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GREATTHAN expression .) ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHAN       [ shift and go to state 37 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 55

    (24) expression -> expression LESSTHAN expression .
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    LESSTHAN        reduce using rule 24 (expression -> expression LESSTHAN expression .)
    LESSTHANEQ      reduce using rule 24 (expression -> expression LESSTHAN expression .)
    GREATTHAN       reduce using rule 24 (expression -> expression LESSTHAN expression .)
    GREATTHANEQ     reduce using rule 24 (expression -> expression LESSTHAN expression .)
    NOTEQUAL        reduce using rule 24 (expression -> expression LESSTHAN expression .)
    ISEQUAL         reduce using rule 24 (expression -> expression LESSTHAN expression .)
    LEFT_KEY        reduce using rule 24 (expression -> expression LESSTHAN expression .)
    IF              reduce using rule 24 (expression -> expression LESSTHAN expression .)
    WHILE           reduce using rule 24 (expression -> expression LESSTHAN expression .)
    NAME            reduce using rule 24 (expression -> expression LESSTHAN expression .)
    PRINT           reduce using rule 24 (expression -> expression LESSTHAN expression .)
    LEFT_PAR        reduce using rule 24 (expression -> expression LESSTHAN expression .)
    INT             reduce using rule 24 (expression -> expression LESSTHAN expression .)
    FLOAT           reduce using rule 24 (expression -> expression LESSTHAN expression .)
    $end            reduce using rule 24 (expression -> expression LESSTHAN expression .)
    RIGHT_KEY       reduce using rule 24 (expression -> expression LESSTHAN expression .)
    ELSE            reduce using rule 24 (expression -> expression LESSTHAN expression .)
    RIGHT_PAR       reduce using rule 24 (expression -> expression LESSTHAN expression .)
    TERM            reduce using rule 24 (expression -> expression LESSTHAN expression .)
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32

  ! MULTIPLY        [ reduce using rule 24 (expression -> expression LESSTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression LESSTHAN expression .) ]
  ! PLUS            [ reduce using rule 24 (expression -> expression LESSTHAN expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression LESSTHAN expression .) ]
  ! LESSTHAN        [ shift and go to state 38 ]
  ! LESSTHANEQ      [ shift and go to state 31 ]
  ! GREATTHAN       [ shift and go to state 37 ]
  ! GREATTHANEQ     [ shift and go to state 29 ]
  ! NOTEQUAL        [ shift and go to state 33 ]
  ! ISEQUAL         [ shift and go to state 35 ]


state 56

    (19) print -> PRINT LEFT_PAR expression . RIGHT_PAR
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    RIGHT_PAR       shift and go to state 59
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    LESSTHANEQ      shift and go to state 31
    GREATTHAN       shift and go to state 37
    GREATTHANEQ     shift and go to state 29
    NOTEQUAL        shift and go to state 33
    ISEQUAL         shift and go to state 35


state 57

    (7) while_do -> WHILE LEFT_PAR expression . RIGHT_PAR do_statement
    (20) expression -> expression . MULTIPLY expression
    (21) expression -> expression . DIVIDE expression
    (22) expression -> expression . PLUS expression
    (23) expression -> expression . MINUS expression
    (24) expression -> expression . LESSTHAN expression
    (25) expression -> expression . LESSTHANEQ expression
    (26) expression -> expression . GREATTHAN expression
    (27) expression -> expression . GREATTHANEQ expression
    (28) expression -> expression . NOTEQUAL expression
    (29) expression -> expression . ISEQUAL expression

    RIGHT_PAR       shift and go to state 60
    MULTIPLY        shift and go to state 36
    DIVIDE          shift and go to state 34
    PLUS            shift and go to state 30
    MINUS           shift and go to state 32
    LESSTHAN        shift and go to state 38
    LESSTHANEQ      shift and go to state 31
    GREATTHAN       shift and go to state 37
    GREATTHANEQ     shift and go to state 29
    NOTEQUAL        shift and go to state 33
    ISEQUAL         shift and go to state 35


state 58

    (2) if_else -> IF LEFT_PAR expression RIGHT_PAR . then_statement else_statement
    (3) if -> IF LEFT_PAR expression RIGHT_PAR . then_statement
    (5) then_statement -> . THEN calc_2

    THEN            shift and go to state 62

    then_statement                 shift and go to state 61

state 59

    (19) print -> PRINT LEFT_PAR expression RIGHT_PAR .

    TERM            reduce using rule 19 (print -> PRINT LEFT_PAR expression RIGHT_PAR .)


state 60

    (7) while_do -> WHILE LEFT_PAR expression RIGHT_PAR . do_statement
    (6) do_statement -> . DO calc_2

    DO              shift and go to state 63

    do_statement                   shift and go to state 64

state 61

    (2) if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement . else_statement
    (3) if -> IF LEFT_PAR expression RIGHT_PAR then_statement .
    (4) else_statement -> . ELSE calc_2

  ! shift/reduce conflict for ELSE resolved as shift
    LEFT_KEY        reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    IF              reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    WHILE           reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    NAME            reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    PRINT           reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    LEFT_PAR        reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    MINUS           reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    INT             reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    FLOAT           reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    $end            reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    RIGHT_KEY       reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .)
    ELSE            shift and go to state 66

  ! ELSE            [ reduce using rule 3 (if -> IF LEFT_PAR expression RIGHT_PAR then_statement .) ]

    else_statement                 shift and go to state 65

state 62

    (5) then_statement -> THEN . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_KEY        shift and go to state 8
    IF              shift and go to state 3
    WHILE           shift and go to state 18
    NAME            shift and go to state 12
    PRINT           shift and go to state 16
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 67
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 63

    (6) do_statement -> DO . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_KEY        shift and go to state 8
    IF              shift and go to state 3
    WHILE           shift and go to state 18
    NAME            shift and go to state 12
    PRINT           shift and go to state 16
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 68
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 64

    (7) while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .

    LEFT_KEY        reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    IF              reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    WHILE           reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    NAME            reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    PRINT           reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    LEFT_PAR        reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    MINUS           reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    INT             reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    FLOAT           reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    $end            reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    RIGHT_KEY       reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)
    ELSE            reduce using rule 7 (while_do -> WHILE LEFT_PAR expression RIGHT_PAR do_statement .)


state 65

    (2) if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .

    LEFT_KEY        reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    IF              reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    WHILE           reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    NAME            reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    PRINT           reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    LEFT_PAR        reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    MINUS           reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    INT             reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    FLOAT           reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    $end            reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    RIGHT_KEY       reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)
    ELSE            reduce using rule 2 (if_else -> IF LEFT_PAR expression RIGHT_PAR then_statement else_statement .)


state 66

    (4) else_statement -> ELSE . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_KEY        shift and go to state 8
    IF              shift and go to state 3
    WHILE           shift and go to state 18
    NAME            shift and go to state 12
    PRINT           shift and go to state 16
    LEFT_PAR        shift and go to state 9
    MINUS           shift and go to state 10
    INT             shift and go to state 4
    FLOAT           shift and go to state 17

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 69
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 67

    (5) then_statement -> THEN calc_2 .
    (16) calc_2 -> calc_2 . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_KEY        reduce using rule 5 (then_statement -> THEN calc_2 .)
    IF              reduce using rule 5 (then_statement -> THEN calc_2 .)
    NAME            reduce using rule 5 (then_statement -> THEN calc_2 .)
    PRINT           reduce using rule 5 (then_statement -> THEN calc_2 .)
    LEFT_PAR        reduce using rule 5 (then_statement -> THEN calc_2 .)
    MINUS           reduce using rule 5 (then_statement -> THEN calc_2 .)
    INT             reduce using rule 5 (then_statement -> THEN calc_2 .)
    FLOAT           reduce using rule 5 (then_statement -> THEN calc_2 .)
    $end            reduce using rule 5 (then_statement -> THEN calc_2 .)
    RIGHT_KEY       reduce using rule 5 (then_statement -> THEN calc_2 .)
    ELSE            reduce using rule 5 (then_statement -> THEN calc_2 .)
    WHILE           shift and go to state 18

  ! WHILE           [ reduce using rule 5 (then_statement -> THEN calc_2 .) ]
  ! LEFT_KEY        [ shift and go to state 8 ]
  ! IF              [ shift and go to state 3 ]
  ! NAME            [ shift and go to state 12 ]
  ! PRINT           [ shift and go to state 16 ]
  ! LEFT_PAR        [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! INT             [ shift and go to state 4 ]
  ! FLOAT           [ shift and go to state 17 ]

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 27
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 68

    (6) do_statement -> DO calc_2 .
    (16) calc_2 -> calc_2 . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_KEY        reduce using rule 6 (do_statement -> DO calc_2 .)
    IF              reduce using rule 6 (do_statement -> DO calc_2 .)
    NAME            reduce using rule 6 (do_statement -> DO calc_2 .)
    PRINT           reduce using rule 6 (do_statement -> DO calc_2 .)
    LEFT_PAR        reduce using rule 6 (do_statement -> DO calc_2 .)
    MINUS           reduce using rule 6 (do_statement -> DO calc_2 .)
    INT             reduce using rule 6 (do_statement -> DO calc_2 .)
    FLOAT           reduce using rule 6 (do_statement -> DO calc_2 .)
    $end            reduce using rule 6 (do_statement -> DO calc_2 .)
    RIGHT_KEY       reduce using rule 6 (do_statement -> DO calc_2 .)
    ELSE            reduce using rule 6 (do_statement -> DO calc_2 .)
    WHILE           shift and go to state 18

  ! WHILE           [ reduce using rule 6 (do_statement -> DO calc_2 .) ]
  ! LEFT_KEY        [ shift and go to state 8 ]
  ! IF              [ shift and go to state 3 ]
  ! NAME            [ shift and go to state 12 ]
  ! PRINT           [ shift and go to state 16 ]
  ! LEFT_PAR        [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! INT             [ shift and go to state 4 ]
  ! FLOAT           [ shift and go to state 17 ]

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 27
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13

state 69

    (4) else_statement -> ELSE calc_2 .
    (16) calc_2 -> calc_2 . calc_2
    (8) calc_2 -> . if_else
    (9) calc_2 -> . if
    (10) calc_2 -> . while_do
    (11) calc_2 -> . read TERM
    (12) calc_2 -> . print TERM
    (13) calc_2 -> . var_assign TERM
    (14) calc_2 -> . expression
    (15) calc_2 -> . LEFT_KEY calc_2 RIGHT_KEY
    (16) calc_2 -> . calc_2 calc_2
    (2) if_else -> . IF LEFT_PAR expression RIGHT_PAR then_statement else_statement
    (3) if -> . IF LEFT_PAR expression RIGHT_PAR then_statement
    (7) while_do -> . WHILE LEFT_PAR expression RIGHT_PAR do_statement
    (18) read -> . NAME EQUALS INPUT
    (19) print -> . PRINT LEFT_PAR expression RIGHT_PAR
    (17) var_assign -> . NAME EQUALS expression
    (20) expression -> . expression MULTIPLY expression
    (21) expression -> . expression DIVIDE expression
    (22) expression -> . expression PLUS expression
    (23) expression -> . expression MINUS expression
    (24) expression -> . expression LESSTHAN expression
    (25) expression -> . expression LESSTHANEQ expression
    (26) expression -> . expression GREATTHAN expression
    (27) expression -> . expression GREATTHANEQ expression
    (28) expression -> . expression NOTEQUAL expression
    (29) expression -> . expression ISEQUAL expression
    (30) expression -> . LEFT_PAR expression RIGHT_PAR
    (31) expression -> . MINUS expression
    (32) expression -> . INT
    (33) expression -> . FLOAT
    (34) expression -> . NAME

    LEFT_KEY        reduce using rule 4 (else_statement -> ELSE calc_2 .)
    IF              reduce using rule 4 (else_statement -> ELSE calc_2 .)
    NAME            reduce using rule 4 (else_statement -> ELSE calc_2 .)
    PRINT           reduce using rule 4 (else_statement -> ELSE calc_2 .)
    LEFT_PAR        reduce using rule 4 (else_statement -> ELSE calc_2 .)
    MINUS           reduce using rule 4 (else_statement -> ELSE calc_2 .)
    INT             reduce using rule 4 (else_statement -> ELSE calc_2 .)
    FLOAT           reduce using rule 4 (else_statement -> ELSE calc_2 .)
    $end            reduce using rule 4 (else_statement -> ELSE calc_2 .)
    RIGHT_KEY       reduce using rule 4 (else_statement -> ELSE calc_2 .)
    ELSE            reduce using rule 4 (else_statement -> ELSE calc_2 .)
    WHILE           shift and go to state 18

  ! WHILE           [ reduce using rule 4 (else_statement -> ELSE calc_2 .) ]
  ! LEFT_KEY        [ shift and go to state 8 ]
  ! IF              [ shift and go to state 3 ]
  ! NAME            [ shift and go to state 12 ]
  ! PRINT           [ shift and go to state 16 ]
  ! LEFT_PAR        [ shift and go to state 9 ]
  ! MINUS           [ shift and go to state 10 ]
  ! INT             [ shift and go to state 4 ]
  ! FLOAT           [ shift and go to state 17 ]

    read                           shift and go to state 6
    while_do                       shift and go to state 5
    if                             shift and go to state 7
    print                          shift and go to state 1
    calc_2                         shift and go to state 27
    var_assign                     shift and go to state 2
    expression                     shift and go to state 15
    if_else                        shift and go to state 13
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 15 resolved as shift
WARNING: shift/reduce conflict for LEFT_KEY in state 27 resolved as shift
WARNING: shift/reduce conflict for IF in state 27 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 27 resolved as shift
WARNING: shift/reduce conflict for NAME in state 27 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 27 resolved as shift
WARNING: shift/reduce conflict for LEFT_PAR in state 27 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 27 resolved as shift
WARNING: shift/reduce conflict for INT in state 27 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 27 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 50 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 50 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 50 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 50 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 50 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATTHAN in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATTHANEQ in state 50 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 52 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 52 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 52 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 52 resolved as shift
WARNING: shift/reduce conflict for LESSTHAN in state 52 resolved as shift
WARNING: shift/reduce conflict for LESSTHANEQ in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATTHAN in state 52 resolved as shift
WARNING: shift/reduce conflict for GREATTHANEQ in state 52 resolved as shift
WARNING: shift/reduce conflict for NOTEQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 52 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 61 resolved as shift
